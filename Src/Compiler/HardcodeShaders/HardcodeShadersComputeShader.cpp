#include"HardcodeShaders.h"
std::unordered_map<std::string, std::variant<ShaderCodeModule::ShaderResources,std::variant<std::vector<uint32_t>,std::string>>> HardcodeShaders::hardcodeShadersComputeShader = {{"Reflection_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{0,"",{{"GlobalParams_std140",{0,0,0,"GlobalParams_std140","uniform",1,8,0,static_cast<ShaderCodeModule::ShaderResources::BindType>(3)}},}}},{"SpirV_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,126,0,131089,55,131089,56,131089,5302,131089,1,393227,73,1280527431,1685353262,808793134,0,196622,0,1,524303,5,2,1852399981,0,24,9,13,393232,2,17,8,8,1,196611,11,1,458757,10,1651469383,1632660577,1936548210,1685353311,3159089,458758,10,0,1651469415,1985965153,929002081,0,393221,13,1651469415,1632660577,1936548210,0,524293,24,1819500383,1600613985,1869833586,1701016181,1634035807,112,262149,34,1886216563,6579564,262149,41,1886216563,6579564,262149,53,1886216563,6579564,262149,59,1886216563,6579564,262149,86,1886216563,6579564,262149,92,1886216563,6579564,262149,102,1886216563,6579564,262149,108,1886216563,6579564,262149,2,1852399981,0,262215,9,11,28,196679,10,2,327752,10,0,35,0,262215,13,33,0,262215,13,34,0,262215,24,33,2,262215,24,34,1,131091,1,196641,3,1,262165,5,32,0,262167,6,5,3,262176,8,1,6,262167,11,5,2,196638,10,11,262176,12,2,10,262165,14,32,1,262187,14,15,0,262176,16,2,11,196630,21,32,589849,22,21,1,2,0,0,2,0,196637,20,22,262176,23,0,20,262176,25,0,22,262167,30,14,2,262167,33,21,4,262167,36,21,3,262187,21,45,1075880919,262187,21,47,1022739087,262187,21,63,1075545375,262187,21,65,1058474557,262187,21,69,1041194025,262187,21,75,0,393260,36,74,75,75,75,262187,21,77,1065353216,393260,36,76,77,77,77,262203,8,9,1,262203,12,13,2,262203,23,24,0,393260,36,123,47,47,47,393260,36,124,65,65,65,393260,36,125,69,69,69,327734,1,2,0,3,131320,4,262205,6,7,9,327746,16,17,13,15,262205,11,18,17,327761,5,19,18,0,327745,25,26,24,19,458831,11,27,7,7,0,1,327761,5,28,18,0,327745,25,29,24,28,262268,30,31,27,262205,22,32,29,327778,33,34,32,31,524367,36,37,34,34,0,1,2,327761,5,38,18,0,327745,25,39,24,38,262205,22,40,39,327778,33,41,40,31,524367,36,43,41,41,0,1,2,327822,36,44,43,45,327809,36,48,123,44,327813,36,49,37,48,327761,5,50,18,0,327745,25,51,24,50,262205,22,52,51,327778,33,53,52,31,524367,36,55,53,53,0,1,2,327761,5,56,18,0,327745,25,57,24,56,262205,22,58,57,327778,33,59,58,31,524367,36,61,59,59,0,1,2,327822,36,62,61,63,327809,36,66,124,62,327813,36,67,55,66,327809,36,70,125,67,327816,36,71,49,70,524300,36,72,73,43,71,74,76,327760,33,78,72,77,262205,22,79,26,262243,79,27,78,327761,5,81,18,0,327745,25,82,24,81,327761,5,83,18,0,327745,25,84,24,83,262205,22,85,84,327778,33,86,85,31,524367,36,88,86,86,0,1,2,327761,5,89,18,0,327745,25,90,24,89,262205,22,91,90,327778,33,92,91,31,524367,36,94,92,92,0,1,2,327822,36,95,94,45,327809,36,97,123,95,327813,36,98,88,97,327761,5,99,18,0,327745,25,100,24,99,262205,22,101,100,327778,33,102,101,31,524367,36,104,102,102,0,1,2,327761,5,105,18,0,327745,25,106,24,105,262205,22,107,106,327778,33,108,107,31,524367,36,110,108,108,0,1,2,327822,36,111,110,63,327809,36,113,124,111,327813,36,114,104,113,327809,36,116,125,114,327816,36,117,98,116,524300,36,118,73,43,117,74,76,327760,33,119,118,77,262205,22,120,82,262243,120,27,119,65789,65592,}},{"GLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
#extension GL_EXT_nonuniform_qualifier : require
layout(row_major) uniform;
layout(row_major) buffer;

#line 90 0
layout(rgba32f)
layout(binding = 2, set = 1)
uniform image2D  _slang_resource_heap_0[];


#line 22879 1
struct GlobalParams_std140_0
{
    uvec2 global_var_7_0;
};


#line 22879
layout(binding = 0)
layout(std140) uniform block_GlobalParams_std140_0
{
    uvec2 global_var_7_0;
}globalParams_0;

#line 7 2
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{

#line 7
    uvec2 _S1 = globalParams_0.global_var_7_0;

#line 13
    uint _S2 = globalParams_0.global_var_7_0.x;

#line 13
    ivec2 _S3 = ivec2(gl_GlobalInvocationID.xy);

#line 13
    vec4 _S4 = (imageLoad((_slang_resource_heap_0[globalParams_0.global_var_7_0.x]), (_S3)));

#line 13
    vec3 _S5 = _S4.xyz;

#line 13
    vec4 _S6 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 13
    vec3 _S7 = _S5 * (0.02999999932944775 + 2.50999999046325684 * _S6.xyz);

#line 13
    vec4 _S8 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 13
    vec3 _S9 = _S8.xyz;

#line 13
    vec4 _S10 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 13
    const vec3 _S11 = vec3(0.0, 0.0, 0.0);

#line 13
    const vec3 _S12 = vec3(1.0, 1.0, 1.0);

#line 13
    imageStore((_slang_resource_heap_0[_S2]), (_S3), vec4(clamp(_S7 / (0.14000000059604645 + _S9 * (0.5899999737739563 + 2.43000006675720215 * _S10.xyz)), _S11, _S12), 1.0));

#line 19
    uint _S13 = _S1.x;

#line 19
    vec4 _S14 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 19
    vec3 _S15 = _S14.xyz;

#line 19
    vec4 _S16 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 19
    vec3 _S17 = _S15 * (0.02999999932944775 + 2.50999999046325684 * _S16.xyz);

#line 19
    vec4 _S18 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 19
    vec3 _S19 = _S18.xyz;

#line 19
    vec4 _S20 = (imageLoad((_slang_resource_heap_0[_S1.x]), (_S3)));

#line 19
    imageStore((_slang_resource_heap_0[_S13]), (_S3), vec4(clamp(_S17 / (0.14000000059604645 + _S19 * (0.5899999737739563 + 2.43000006675720215 * _S20.xyz)), _S11, _S12), 1.0));
    return;
}

)"},{"HLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#pragma pack_matrix(column_major)
#ifdef SLANG_HLSL_ENABLE_NVAPI
#include "nvHLSLExtns.h"
#endif

#ifndef __DXC_VERSION_MAJOR
// warning X3557: loop doesn't seem to do anything, forcing loop to unroll
#pragma warning(disable : 3557)
#endif


#line 22879 "hlsl.meta.slang"
struct GlobalParams_0
{
    uint2 global_var_7_0;
};


#line 22879
cbuffer globalParams_0 : register(b0)
{
    GlobalParams_0 globalParams_0;
}

#line 2 "b766333db470cb507842e8f34c6b71704f6ebe5a"
struct compute_input_0
{
    uint3 dispatch_thread_id_input_0 : SV_DispatchThreadID;
};

[numthreads(8, 8, 1)]
void main(compute_input_0 input_0)
{

#line 7
    compute_input_0 _S1 = input_0;

#line 13
    RWTexture2D<float4 > _S2 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 13
    uint2 _S3 = _S1.dispatch_thread_id_input_0.xy;

#line 13
    RWTexture2D<float4 > _S4 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 13
    float4 _S5 = _S4[_S3];

#line 13
    float3 _S6 = _S5.xyz;

#line 13
    RWTexture2D<float4 > _S7 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 13
    float4 _S8 = _S7[_S3];

#line 13
    float3 _S9 = _S6 * (0.02999999932944775f + 2.50999999046325684f * _S8.xyz);

#line 13
    RWTexture2D<float4 > _S10 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 13
    float4 _S11 = _S10[_S3];

#line 13
    float3 _S12 = _S11.xyz;

#line 13
    RWTexture2D<float4 > _S13 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 13
    float4 _S14 = _S13[_S3];

#line 13
    float3 _S15 = float3(0.0f, 0.0f, 0.0f);

#line 13
    float3 _S16 = float3(1.0f, 1.0f, 1.0f);

#line 13
    _S2[_S3] = float4(clamp(_S9 / (0.14000000059604645f + _S12 * (0.5899999737739563f + 2.43000006675720215f * _S14.xyz)), _S15, _S16), 1.0f);

#line 19
    RWTexture2D<float4 > _S17 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 19
    RWTexture2D<float4 > _S18 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 19
    float4 _S19 = _S18[_S3];

#line 19
    float3 _S20 = _S19.xyz;

#line 19
    RWTexture2D<float4 > _S21 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 19
    float4 _S22 = _S21[_S3];

#line 19
    float3 _S23 = _S20 * (0.02999999932944775f + 2.50999999046325684f * _S22.xyz);

#line 19
    RWTexture2D<float4 > _S24 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 19
    float4 _S25 = _S24[_S3];

#line 19
    float3 _S26 = _S25.xyz;

#line 19
    RWTexture2D<float4 > _S27 = RWTexture2D<float4 >(ResourceDescriptorHeap[globalParams_0.global_var_7_0.x]);

#line 19
    float4 _S28 = _S27[_S3];

#line 19
    _S17[_S3] = float4(clamp(_S23 / (0.14000000059604645f + _S26 * (0.5899999737739563f + 2.43000006675720215f * _S28.xyz)), _S15, _S16), 1.0f);
    return;
}

)"},{"Slang_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(uniform RWTexture2D<float4>.Handle global_var_7;
struct compute_input {
	uint3 dispatch_thread_id_input : SV_DispatchThreadID;
}
[shader("compute")]
[numthreads(8,8,1)]
void main(compute_input input) {
	float var_0 = 2.510000;
	float var_1 = 0.030000;
	float var_2 = 2.430000;
	float var_3 = 0.590000;
	float var_4 = 0.140000;
	global_var_7[input.dispatch_thread_id_input.xy] = float4(clamp(((global_var_7[input.dispatch_thread_id_input.xy].xyz * (var_1 + (var_0 * global_var_7[input.dispatch_thread_id_input.xy].xyz))) / (var_4 + (global_var_7[input.dispatch_thread_id_input.xy].xyz * (var_3 + (var_2 * global_var_7[input.dispatch_thread_id_input.xy].xyz))))),float3(0.000000, 0.000000, 0.000000),float3(1.000000, 1.000000, 1.000000)),1.000000);
	float var_5 = 2.510000;
	float var_6 = 0.030000;
	float var_7 = 2.430000;
	float var_8 = 0.590000;
	float var_9 = 0.140000;
	global_var_7[input.dispatch_thread_id_input.xy] = float4(clamp(((global_var_7[input.dispatch_thread_id_input.xy].xyz * (var_6 + (var_5 * global_var_7[input.dispatch_thread_id_input.xy].xyz))) / (var_9 + (global_var_7[input.dispatch_thread_id_input.xy].xyz * (var_8 + (var_7 * global_var_7[input.dispatch_thread_id_input.xy].xyz))))),float3(0.000000, 0.000000, 0.000000),float3(1.000000, 1.000000, 1.000000)),1.000000);
}
)"},{"DXIL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,1769301004,2111137210,3814550431,1357053076,1,4100,8,64,80,96,112,224,1884,1936,1964,810108499,8,33556480,0,826757961,8,0,8,826757967,8,0,8,810963792,104,52,0,0,0,0,0,4294967295,5,0,0,8,8,1,1,1,24,2,0,0,0,13,0,8,1767992576,110,0,1413567571,1652,327782,413,1279875140,262,16,1628,3737142082,3105,404,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963334,537133055,1644614913,4294967288,9437695,6217,3,1113621011,101207072,0,8329,62,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146902032,167774528,2696939750,271631116,2424325937,4184919921,2450585107,2966225439,3862439952,542278152,2753859779,886833356,1032126044,2226119812,1603474100,405419740,2726715782,204604212,51130563,100754745,2248546404,2692946017,3271766082,1892971664,284562425,1416482706,2408780465,2250389212,1091180641,3577792525,1340457837,4266148824,353257546,958022665,139268367,409018657,3356262666,3275872325,1138249701,1212874312,2282541595,683771416,1130902021,3225475906,1546682928,621890853,951598668,1084534785,1339174916,3342581923,1476435032,402792530,4031883241,4667409,10,3228701715,2271245447,2038917174,3228697448,1353649543,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,544409504,244346119,2047303793,3497133872,120645894,1929879666,2423064352,121665038,1946640506,283510480,127956487,1829183603,544411232,120617479,3859206258,2691958624,121665031,2014240877,1618020256,120617479,1980211314,2655192896,2048,0,2248146944,1049660,1,0,538212620,512,0,955389952,524352,0,3828350976,402686081,0,1610612736,16851912,16,0,44536000,16386,0,253853696,4195334,0,1124073472,2148011422,0,0,16562,14,345513522,2420904217,1193675148,440599750,1176019018,211945984,1242866122,2701789347,2150943472,201589444,1881162756,432177158,6748672,0,6265,100,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,2249214992,674267748,2558624795,113970208,2351444161,270036429,2216728706,2363966913,2351713773,776743437,200175020,808485478,1497567259,2153800460,2176008461,2550595584,2635627552,2973218355,3140466224,2611984688,3255408687,101731536,1009812071,2583790611,114363424,1663338628,2204838562,68377792,272019504,454632132,1356547588,1838551064,3623945235,202927104,2081479631,60917275,1634537987,68382313,136751153,1617015939,1627611544,2484666764,329418433,53600259,1869375002,326333537,2439143812,927413990,672678199,2019914786,1634692191,3404221540,3907436272,919266526,110127136,1812377706,1434563936,2932706693,2894931405,1248759244,3273741328,2469114227,1937460123,1292898971,3965513928,3404519618,1174709988,2537304605,2989536313,933673266,699806386,210129409,1823360463,1850650094,1248750764,3273807072,2211160435,1936853803,2735448955,2608036683,1617699483,3473704784,1317915813,770314030,1852739021,1560698954,3327979720,3906792158,2800149706,27908,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228086,3493739759,1275383348,3274967108,872503362,4176723548,285266433,1840715750,4184922886,17556430,1413747797,307281978,1046487046,3498498930,1022334733,3222343870,859866180,957858860,53774028,2686851282,1022334733,3222343870,859866180,957858860,2399160396,3854783501,289378107,1145390295,1602420969,1477555932,2403067331,1154945343,960169029,3071795473,1892811117,1340329721,2197832775,1841887288,12648475,840,0,1313098825,44,2359296,1714958642,942684004,1647783987,808728370,892351541,1667523122,1681286457,1633837876,1650749486,0,1213415752,20,0,148344609,1076329264,3693806932,3125570974,1279875140,2128,327782,532,1279875140,262,16,2104,3737142082,3105,523,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963334,537133055,1644614913,4294967288,9437695,6217,3,1113621011,101207072,0,8329,62,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146902032,167774528,2696939750,271631116,2424325937,4184919921,2450585107,2966225439,3862439952,542278152,2753859779,886833356,1032126044,2226119812,1603474100,405419740,2726715782,204604212,51130563,100754745,2248546404,2692946017,3271766082,1892971664,284562425,1416482706,2408780465,2250389212,1091180641,3577792525,1340457837,4266148824,353257546,958022665,139268367,409018657,3356262666,3275872325,1138249701,1212874312,2282541595,683771416,1130902021,3225475906,1546682928,621890853,951598668,1084534785,1339174916,3342581923,1476435032,402792530,4031883241,4667409,10,3228701715,2271245447,2038917174,3228697448,1353649543,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,544409504,244346119,2047303793,3497133872,120645894,1929879666,2423064352,121665038,1946640506,283510480,127956487,1829183603,544411232,120617479,3859206258,2691958624,121665031,2014240877,1618020256,120617479,1980211314,2655192896,0,0,2248146944,1049660,1,0,538212620,512,0,955389952,524352,0,3828350976,402686081,0,1610612736,16851912,16,0,44536000,16386,0,253853696,4195334,0,1124073472,2148011422,0,0,16562,10,345513522,2420904217,1193675148,440599750,1243127882,547357794,46432522,1141115908,422048,0,6265,54,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,2249214992,674267748,2558624795,113970208,2351444065,270036429,203462786,203490508,2215838240,679532961,1126736651,2617797635,1006633997,4261056,2777003080,3289402809,203463136,1772193486,847515014,579261777,2865234066,3613836994,1447465702,624379622,3784354312,3382040761,3116213709,646449485,1982756964,1702259809,2734838642,3416135950,1494768156,466836633,2497386841,2252548352,911680231,925325047,624375382,3784370808,3518600377,3175212489,3453073829,2885965,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228086,3493739759,1275383348,3274967108,872503362,4176723548,285266433,1840715750,4184922886,17556430,1413747797,307281978,1046487046,3498498930,1022334733,3222343870,859866180,957858860,53774028,2686851282,1022334733,3222343870,859866180,957858860,2399160396,3854783501,289378107,1145390295,1602420969,1477555932,2403067331,1154945343,960169029,3071795473,1892811117,1340329721,2197832775,1841887288,12648475,840,8289,167,742458387,16,24,2483080244,3960807761,2483480896,336515421,102318177,1765862548,1229988116,508661826,147406917,73609472,4169271328,4218439223,3246532712,3276521752,294513643,2272815356,3494260832,2132517575,2020148323,37216507,35444544,1814154711,275998989,8176396,525859,2377146498,3413906497,2147598728,1700796448,2294482304,545259905,2154565656,2173223301,404783105,2509270288,29460673,1410867328,1661833321,1088048,525859,3164627074,3510900353,2147598728,1801459744,2294941152,545260353,2960144408,341860869,1644568674,161678880,546975745,2198446852,522535776,3640208411,2261240176,1614167563,2200023536,2089356687,1675905132,1662984771,3541629240,1327024073,4034410046,2407784881,520118285,3640206363,113756448,2352365129,543980545,1356396547,1739714566,54366112,3894013053,7365171,2449868832,2160194602,117842694,543195648,203391661,1885483113,101195776,3254528786,102958752,1619132423,532854048,1647341836,136314992,2150339078,587669698,2181039878,1119690848,812846120,536928354,743441928,2685977072,3264223681,1886651424,117842695,1348502016,2753544893,646720065,25739268,404783106,167818536,3252428225,2147598728,2975864864,469830208,3414156,1669431816,2685444363,28056322,704815146,1114161824,136743936,549611713,4060590296,3826221489,3357492067,2151581383,8261007,16653087,4062459454,2408653233,2356971789,418972945,837945907,1675891846,3351259395,2407551622,520136205,3640206363,113756448,2755018313,1349286914,2967009285,1739714570,54366112,3894013053,7365171,302385184,3770911804,117842698,543195648,205063109,1885483183,101195776,3281271954,102959872,1619132423,960744736,1647359756,136314992,2554139142,587956419,2181039878,3285524576,817433657,536928354,1037043208,3088630664,3282578242,3501851680,2059,0,}},
};