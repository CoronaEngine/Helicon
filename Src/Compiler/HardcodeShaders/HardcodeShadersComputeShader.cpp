#include"HardcodeShaders.h"
std::unordered_map<std::string, std::variant<EmbeddedShader::ShaderCodeModule::ShaderResources,std::variant<std::vector<uint32_t>,std::string>>> EmbeddedShader::HardcodeShaders::hardcodeShadersComputeShader = {{"Reflection_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{0,"",{}}},{"SpirV_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,97,0,131089,55,131089,56,131089,1,393227,54,1280527431,1685353262,808793134,0,196622,0,1,458767,5,2,1852399981,0,19,9,393232,2,17,8,8,1,196611,11,1,720901,19,1651469415,1885301857,1835102817,1919251557,1869374047,1731095395,1633841004,1635147628,3694450,262149,21,1886216563,6579564,262149,26,1886216563,6579564,262149,36,1886216563,6579564,262149,40,1886216563,6579564,262149,63,1886216563,6579564,262149,67,1886216563,6579564,262149,75,1886216563,6579564,262149,79,1886216563,6579564,262149,2,1852399981,0,262215,9,11,28,262215,19,33,0,262215,19,34,0,131091,1,196641,3,1,262165,5,32,0,262167,6,5,3,262176,8,1,6,262167,10,5,2,262165,12,32,1,262167,13,12,2,196630,15,32,589849,16,15,1,2,0,0,2,0,262176,18,0,16,262167,20,15,4,262167,23,15,3,262187,15,30,1075880919,262187,15,32,1022739087,262187,15,44,1075545375,262187,15,46,1058474557,262187,15,50,1041194025,262187,15,56,0,393260,23,55,56,56,56,262187,15,58,1065353216,393260,23,57,58,58,58,262203,8,9,1,262203,18,19,0,393260,23,94,32,32,32,393260,23,95,46,46,46,393260,23,96,50,50,50,327734,1,2,0,3,131320,4,262205,6,7,9,458831,10,11,7,7,0,1,262268,13,14,11,262205,16,17,19,327778,20,21,17,14,524367,23,24,21,21,0,1,2,262205,16,25,19,327778,20,26,25,14,524367,23,28,26,26,0,1,2,327822,23,29,28,30,327809,23,33,94,29,327813,23,34,24,33,262205,16,35,19,327778,20,36,35,14,524367,23,38,36,36,0,1,2,262205,16,39,19,327778,20,40,39,14,524367,23,42,40,40,0,1,2,327822,23,43,42,44,327809,23,47,95,43,327813,23,48,38,47,327809,23,51,96,48,327816,23,52,34,51,524300,23,53,54,43,52,55,57,327760,20,59,53,58,262205,16,60,19,262243,60,11,59,262205,16,62,19,327778,20,63,62,14,524367,23,65,63,63,0,1,2,262205,16,66,19,327778,20,67,66,14,524367,23,69,67,67,0,1,2,327822,23,70,69,30,327809,23,72,94,70,327813,23,73,65,72,262205,16,74,19,327778,20,75,74,14,524367,23,77,75,75,0,1,2,262205,16,78,19,327778,20,79,78,14,524367,23,81,79,79,0,1,2,327822,23,82,81,44,327809,23,84,95,82,327813,23,85,77,84,327809,23,87,96,85,327816,23,88,73,87,524300,23,89,54,43,88,55,57,327760,20,90,89,58,262205,16,91,19,262243,91,11,90,65789,65592,}},{"GLSL_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
layout(row_major) uniform;
layout(row_major) buffer;

#line 90 0
layout(rgba32f)
layout(binding = 0)
uniform image2D global_parameter_block_global_var_8_0;


#line 10 1
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{



    ivec2 _S1 = ivec2(gl_GlobalInvocationID.xy);

#line 16
    vec4 _S2 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 16
    vec3 _S3 = _S2.xyz;

#line 16
    vec4 _S4 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 16
    vec3 _S5 = _S3 * (0.02999999932944775 + 2.50999999046325684 * _S4.xyz);

#line 16
    vec4 _S6 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 16
    vec3 _S7 = _S6.xyz;

#line 16
    vec4 _S8 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 16
    const vec3 _S9 = vec3(0.0, 0.0, 0.0);

#line 16
    const vec3 _S10 = vec3(1.0, 1.0, 1.0);

#line 16
    imageStore((global_parameter_block_global_var_8_0), (_S1), vec4(clamp(_S5 / (0.14000000059604645 + _S7 * (0.5899999737739563 + 2.43000006675720215 * _S8.xyz)), _S9, _S10), 1.0));

#line 22
    vec4 _S11 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 22
    vec3 _S12 = _S11.xyz;

#line 22
    vec4 _S13 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 22
    vec3 _S14 = _S12 * (0.02999999932944775 + 2.50999999046325684 * _S13.xyz);

#line 22
    vec4 _S15 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 22
    vec3 _S16 = _S15.xyz;

#line 22
    vec4 _S17 = (imageLoad((global_parameter_block_global_var_8_0), (_S1)));

#line 22
    imageStore((global_parameter_block_global_var_8_0), (_S1), vec4(clamp(_S14 / (0.14000000059604645 + _S16 * (0.5899999737739563 + 2.43000006675720215 * _S17.xyz)), _S9, _S10), 1.0));
    return;
}

)"},{"HLSL_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"()"},{"Slang_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(struct parameter_block_struct {
	RWTexture2D<float4> global_var_8;
}
ParameterBlock<parameter_block_struct> global_parameter_block;
struct compute_input {
	uint3 dispatch_thread_id_input : SV_DispatchThreadID;
}
[shader("compute")]
[numthreads(8,8,1)]
void main(compute_input input) {
	float var_0 = 2.510000;
	float var_1 = 0.030000;
	float var_2 = 2.430000;
	float var_3 = 0.590000;
	float var_4 = 0.140000;
	global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy] = float4(clamp(((global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_1 + (var_0 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))) / (var_4 + (global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_3 + (var_2 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))))),float3(0.000000, 0.000000, 0.000000),float3(1.000000, 1.000000, 1.000000)),1.000000);
	float var_5 = 2.510000;
	float var_6 = 0.030000;
	float var_7 = 2.430000;
	float var_8 = 0.590000;
	float var_9 = 0.140000;
	global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy] = float4(clamp(((global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_6 + (var_5 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))) / (var_9 + (global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_8 + (var_7 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))))),float3(0.000000, 0.000000, 0.000000),float3(1.000000, 1.000000, 1.000000)),1.000000);
}
)"},{"DXIL_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,470580871,2429939121,1118174230,2980138138,1,3752,7,60,76,92,108,220,1748,1776,810108499,8,2048,0,826757961,8,0,8,826757967,8,0,8,810963792,104,52,0,0,0,0,0,4294967295,5,0,0,8,8,1,1,1,24,6,0,0,0,2,0,8,1767992576,110,0,1413567571,1520,327782,380,1279875140,262,16,1496,3737142082,3105,371,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38081664,1108054594,338825380,1259866168,2287088138,538218568,2777171523,1110579456,2416855268,1355031185,2357285185,2330297313,105261316,6225,8,4292906011,134217727,229114432,4294963334,537133055,1644614913,4294967288,9437695,6217,3,1113621011,101207072,0,8329,58,155722290,75850784,2225349267,3810693892,345022852,2357873682,1285850123,2323472,3860070437,211861512,857869411,2534225664,554656063,2904632313,3071796420,2355301005,134509337,3414588321,2424811679,2254967036,708919429,2355763658,3021522481,444990154,207820899,856184482,3682050444,4128504176,314544656,38093714,1137591953,1212289860,279124040,4064847978,670228896,2133074412,1762501669,831276038,1346444496,2833790218,2248279908,644024337,1980176434,2558101256,2240820999,1921359963,2826569664,120092935,1040523321,410159024,125336071,1929633913,142051168,56654343,1057202224,1077871360,1195189825,2560,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,2148131888,0,0,1137205248,1048832,0,2428502016,1073873255,0,2147483648,67325729,192,0,127812352,32776,0,1015414784,16781330,0,201326592,2108537,2,0,66248,11,345513522,2420904217,1193675148,440599750,588009509,307250432,2232438917,1409390679,394788935,35676192,6637,6265,92,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,2249214992,540050019,2558624795,113839136,2351444161,270036429,1814075522,2363542290,2351713773,1278086125,2360192046,1273908398,1819143564,3985435629,3985386573,3997970123,1712056075,321400962,546966148,3238447884,2251044464,3234207922,1827884340,68001800,79692048,3539009,2726495771,2262107190,304912481,1852399981,2586706963,80481312,204892257,543962843,920865932,1208357652,3056799005,3115987127,2967519753,2744873800,203463579,851054863,3082170300,1948660272,1935636581,1701998452,202346523,3322691778,2785223040,1570446090,1494895515,2497518489,2252515360,643261159,3874920247,2585797942,3636060560,2514071941,2349419977,779641914,1684105331,1867346533,1399612772,420258818,3646720926,3701300188,2497501528,2252646944,127353575,3873707607,1175930614,921106071,3937412407,2495209872,3855208889,3114646849,156093905,2019831482,1970234158,1919251566,839013235,0,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,29,2534228054,3493739759,1275383348,3274967108,872486978,4176723548,285266433,1840715750,4184923398,285991886,138693633,2084750132,1215087505,1636638771,4184921346,3293569998,1360089397,400605242,3590548919,3821992304,1362478159,1313784081,1841690692,1546944603,3556307902,549458193,3681697294,3162118,210,0,1213415752,20,0,3812370662,2026891414,1105327457,624764492,1279875140,1968,327782,492,1279875140,262,16,1944,3737142082,3105,483,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38081664,1108054594,338825380,1259866168,2287088138,538218568,2777171523,1110579456,2416855268,1355031185,2357285185,2330297313,105261316,6225,8,4292906011,134217727,229114432,4294963334,537133055,1644614913,4294967288,9437695,6217,3,1113621011,101207072,0,8329,58,155722290,75850784,2225349267,3810693892,345022852,2357873682,1285850123,2323472,3860070437,211861512,857869411,2534225664,554656063,2904632313,3071796420,2355301005,134509337,3414588321,2424811679,2254967036,708919429,2355763658,3021522481,444990154,207820899,856184482,3682050444,4128504176,314544656,38093714,1137591953,1212289860,279124040,4064847978,670228896,2133074412,1762501669,831276038,1346444496,2833790218,2248279908,644024337,1980176434,2558101256,2240820999,1921359963,2826569664,120092935,1040523321,410159024,125336071,1929633913,142051168,56654343,1057202224,1077871360,1195189825,2560,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,648240,0,0,1137205248,1048832,0,2428502016,1073873255,0,2147483648,67325729,192,0,127812352,32776,0,1015414784,16781330,0,201326592,2108537,2,0,66248,10,345513522,2420904217,1193675148,440599750,621563941,72352305,1410355333,394788935,35676192,6637,6265,57,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,2249214992,540050019,2558624795,113839136,2351444065,270036429,203462786,2204173514,2249214984,961577573,3636790299,2735417520,954417960,2149692366,71307318,17044224,2518077728,3762370278,3233941918,1720062028,3277680835,749289990,1362183020,1632998528,1936438115,1932206921,68328355,1559283797,3873753836,2799492818,840123396,817567548,3107109686,2270265641,241553164,1286376493,2894981550,2152361356,1942167956,2073766801,723227563,1142070171,1559283829,3840466122,3537805554,2800150748,6404,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,29,2534228054,3493739759,1275383348,3274967108,872486978,4176723548,285266433,1840715750,4184923398,285991886,138693633,2084750132,1215087505,1636638771,4184921346,3293569998,1360089397,400605242,3590548919,3821992304,1362478159,1313784081,1841690692,1546944603,3556307902,549458193,3681697294,3162118,210,8289,146,742458387,16,21,3389023796,927633576,2315739296,51159088,144733770,2182236801,127142224,2541891993,467130246,4040292387,2355151118,927305632,3523790590,1874982640,3767296004,72405494,268579203,2751217924,1771079480,337700676,55621,525859,2170577026,3631223681,2147582344,1712330784,102987056,1619132422,352427072,117842694,543195648,339018129,853539,2695913602,2204374273,911828368,2734690458,2586853897,808847408,2443293170,2089684367,1675665516,455017795,2430138412,1149683656,4062459454,2408785457,2356976177,3278103769,941301510,3251689720,1044973255,2985445430,227512897,455016544,910033090,3967549832,3479431193,108732224,471371002,3246524416,812911139,3246965140,404783105,122725180,411834755,2181562396,1980384193,2294389808,545259969,1621441560,2350482183,134224920,174309762,3248238711,2147598728,2805733408,436406144,3676300,2470543880,103838986,2064007269,440469552,3246965184,404783105,124823368,587628646,2181041414,3266097248,1618740253,130049286,2080882812,1088048,809634211,906506394,1820099004,3640198016,2985428752,1675628257,3351256579,2407545990,1820100877,1130619976,4167245602,4106632768,4052515969,3772315907,3786534919,56877071,113754152,1211514441,2453778930,10685839,21502751,43267646,3894013052,524341091,2365195899,134224920,240370050,3265278135,2147598728,3862698016,709036928,1841292,1942061576,2821765390,29460674,1008214144,1124831464,471370794,3246524416,817499795,3246965416,404783105,196143676,411839171,2181562424,3087975233,1890059824,137412106,46934785,2,0,}},{"DXBC_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,3333039836,147651089,3289139207,728733083,1,1300,6,56,244,260,276,1128,1144,1178944594,180,0,0,1,60,1129514241,1051904,138,625218323,60,24,40,40,36,12,0,100,4,5,4,4294967295,0,1,12,0,0,1651469415,1885301857,1835102817,1919251557,1869374047,1734306659,1633841004,1635147628,1597529970,1766654000,1936683619,544499311,539578920,1280527432,1634226976,544367972,1886220099,1919249513,774910240,2880110641,1313297225,8,0,8,1313297231,8,0,8,1480935507,844,327761,211,16779370,117446812,3272262,0,0,0,21845,0,33554527,131122,33554536,3,67109019,8,8,1,117440675,1048690,0,132422,2223686,0,0,117440675,1048690,1,132422,2223686,0,0,251658290,1048690,1,1049158,1,16386,1075880919,1075880919,1075880919,0,16386,1022739087,1022739087,1022739087,0,117440568,1048690,0,1049158,0,1049158,1,117440675,1048690,1,132422,2223686,0,0,117440675,1048690,2,132422,2223686,0,0,251658290,1048690,2,1049158,2,16386,1075545375,1075545375,1075545375,0,16386,1058474557,1058474557,1058474557,0,201326642,1048690,1,1049158,1,1049158,2,16386,1041194025,1041194025,1041194025,0,117448718,1048690,0,1049158,0,1049158,1,83886134,1048706,0,16385,1065353216,117440676,2220274,0,0,132422,1052230,0,117440675,1048690,0,132422,2223686,0,0,117440675,1048690,1,132422,2223686,0,0,251658290,1048690,1,1049158,1,16386,1075880919,1075880919,1075880919,0,16386,1022739087,1022739087,1022739087,0,117440568,1048690,0,1049158,0,1049158,1,117440675,1048690,1,132422,2223686,0,0,117440675,1048690,2,132422,2223686,0,0,251658290,1048690,2,1049158,2,16386,1075545375,1075545375,1075545375,0,16386,1058474557,1058474557,1058474557,0,201326642,1048690,1,1049158,1,1049158,2,16386,1041194025,1041194025,1041194025,0,117448718,1048690,0,1049158,0,1049158,1,83886134,1048706,0,16385,1065353216,117440676,2220274,0,0,132422,1052230,0,16777278,810108499,8,2048,0,1413567571,148,23,3,0,1,10,0,0,1,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,}},{"Reflection_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{0,"",{{"parameter_block_struct_std140",{0,0,0,"parameter_block_struct_std140","uniform",1,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(3)}},}}},{"SpirV_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,126,0,131089,55,131089,56,131089,5302,131089,1,393227,73,1280527431,1685353262,808793134,0,196622,0,1,524303,5,2,1852399981,0,13,9,24,393232,2,17,1,1,1,196611,11,1,655365,10,1634886000,1702126957,1818386290,1600873327,1970435187,1935635555,875652212,48,458758,10,0,1651469415,1985965153,945779297,0,524293,13,1651469415,1885301857,1835102817,1919251557,1869374047,27491,393221,24,1954047348,1214607989,1818521185,29541,262149,34,1886216563,6579564,262149,41,1886216563,6579564,262149,53,1886216563,6579564,262149,59,1886216563,6579564,262149,86,1886216563,6579564,262149,92,1886216563,6579564,262149,102,1886216563,6579564,262149,108,1886216563,6579564,262149,2,1852399981,0,262215,9,11,28,196679,10,2,327752,10,0,35,0,262215,13,33,0,262215,13,34,0,262215,24,33,0,262215,24,34,2,131091,1,196641,3,1,262165,5,32,0,262167,6,5,3,262176,8,1,6,262167,11,5,2,196638,10,11,262176,12,2,10,262165,14,32,1,262187,14,15,0,262176,16,2,11,196630,21,32,589849,22,21,1,2,0,0,2,0,196637,20,22,262176,23,0,20,262176,25,0,22,262167,30,14,2,262167,33,21,4,262167,36,21,3,262187,21,45,1075880919,262187,21,47,1022739087,262187,21,63,1075545375,262187,21,65,1058474557,262187,21,69,1041194025,262187,21,75,0,393260,36,74,75,75,75,262187,21,77,1065353216,393260,36,76,77,77,77,262203,8,9,1,262203,12,13,2,262203,23,24,0,393260,36,123,47,47,47,393260,36,124,65,65,65,393260,36,125,69,69,69,327734,1,2,0,3,131320,4,262205,6,7,9,327746,16,17,13,15,262205,11,18,17,327761,5,19,18,0,327745,25,26,24,19,458831,11,27,7,7,0,1,327761,5,28,18,0,327745,25,29,24,28,262268,30,31,27,262205,22,32,29,327778,33,34,32,31,524367,36,37,34,34,0,1,2,327761,5,38,18,0,327745,25,39,24,38,262205,22,40,39,327778,33,41,40,31,524367,36,43,41,41,0,1,2,327822,36,44,43,45,327809,36,48,123,44,327813,36,49,37,48,327761,5,50,18,0,327745,25,51,24,50,262205,22,52,51,327778,33,53,52,31,524367,36,55,53,53,0,1,2,327761,5,56,18,0,327745,25,57,24,56,262205,22,58,57,327778,33,59,58,31,524367,36,61,59,59,0,1,2,327822,36,62,61,63,327809,36,66,124,62,327813,36,67,55,66,327809,36,70,125,67,327816,36,71,49,70,524300,36,72,73,43,71,74,76,327760,33,78,72,77,262205,22,79,26,262243,79,27,78,327761,5,81,18,0,327745,25,82,24,81,327761,5,83,18,0,327745,25,84,24,83,262205,22,85,84,327778,33,86,85,31,524367,36,88,86,86,0,1,2,327761,5,89,18,0,327745,25,90,24,89,262205,22,91,90,327778,33,92,91,31,524367,36,94,92,92,0,1,2,327822,36,95,94,45,327809,36,97,123,95,327813,36,98,88,97,327761,5,99,18,0,327745,25,100,24,99,262205,22,101,100,327778,33,102,101,31,524367,36,104,102,102,0,1,2,327761,5,105,18,0,327745,25,106,24,105,262205,22,107,106,327778,33,108,107,31,524367,36,110,108,108,0,1,2,327822,36,111,110,63,327809,36,113,124,111,327813,36,114,104,113,327809,36,116,125,114,327816,36,117,98,116,524300,36,118,73,43,117,74,76,327760,33,119,118,77,262205,22,120,82,262243,120,27,119,65789,65592,}},{"GLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
#extension GL_EXT_nonuniform_qualifier : require
layout(row_major) uniform;
layout(row_major) buffer;

#line 22879 0
struct parameter_block_struct_std140_0
{
    uvec2 global_var_8_0;
};


#line 4 1
layout(binding = 0)
layout(std140) uniform block_parameter_block_struct_std140_0
{
    uvec2 global_var_8_0;
}global_parameter_block_0;

#line 4
layout(rgba32f)
layout(binding = 0, set = 2)
uniform image2D  textureHandles_0[];


#line 52
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main()
{

#line 52
    uvec2 _S1 = global_parameter_block_0.global_var_8_0;

#line 58
    uint _S2 = global_parameter_block_0.global_var_8_0.x;

#line 58
    ivec2 _S3 = ivec2(gl_GlobalInvocationID.xy);

#line 58
    vec4 _S4 = (imageLoad((textureHandles_0[global_parameter_block_0.global_var_8_0.x]), (_S3)));

#line 58
    vec3 _S5 = _S4.xyz;

#line 58
    vec4 _S6 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 58
    vec3 _S7 = _S5 * (0.02999999932944775 + 2.50999999046325684 * _S6.xyz);

#line 58
    vec4 _S8 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 58
    vec3 _S9 = _S8.xyz;

#line 58
    vec4 _S10 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 58
    const vec3 _S11 = vec3(0.0, 0.0, 0.0);

#line 58
    const vec3 _S12 = vec3(1.0, 1.0, 1.0);

#line 58
    imageStore((textureHandles_0[_S2]), (_S3), vec4(clamp(_S7 / (0.14000000059604645 + _S9 * (0.5899999737739563 + 2.43000006675720215 * _S10.xyz)), _S11, _S12), 1.0));

#line 64
    uint _S13 = _S1.x;

#line 64
    vec4 _S14 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 64
    vec3 _S15 = _S14.xyz;

#line 64
    vec4 _S16 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 64
    vec3 _S17 = _S15 * (0.02999999932944775 + 2.50999999046325684 * _S16.xyz);

#line 64
    vec4 _S18 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 64
    vec3 _S19 = _S18.xyz;

#line 64
    vec4 _S20 = (imageLoad((textureHandles_0[_S1.x]), (_S3)));

#line 64
    imageStore((textureHandles_0[_S13]), (_S3), vec4(clamp(_S17 / (0.14000000059604645 + _S19 * (0.5899999737739563 + 2.43000006675720215 * _S20.xyz)), _S11, _S12), 1.0));
    return;
}

)"},{"HLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"()"},{"Slang_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(struct parameter_block_struct {
	uniform RWTexture2D<float4>.Handle global_var_8;
}
ParameterBlock<parameter_block_struct> global_parameter_block;
[vk::binding(0, 1)]
__DynamicResource<__DynamicResourceKind.Sampler> samplerHandles[];

[vk::binding(0, 2)]
__DynamicResource<__DynamicResourceKind.General> textureHandles[];

[vk::binding(0, 3)]
__DynamicResource<__DynamicResourceKind.General> bufferHandles[];

[vk::binding(0, 4)]
__DynamicResource<__DynamicResourceKind.General> combinedTextureSamplerHandles[];

[vk::binding(0, 5)]
__DynamicResource<__DynamicResourceKind.General> accelerationStructureHandles[];

[vk::binding(0, 6)]
__DynamicResource<__DynamicResourceKind.General> texelBufferHandles[];

export T getDescriptorFromHandle<T>(DescriptorHandle<T> handle) where T : IOpaqueDescriptor
{
	__target_switch
	{
		case spirv:
		case glsl:
		if (T.kind == DescriptorKind.Sampler)
			return samplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Texture)
			return textureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Buffer)
			return bufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.CombinedTextureSampler)
			return combinedTextureSamplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.AccelerationStructure)
			return accelerationStructureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.TexelBuffer)
			return texelBufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else
			return defaultGetDescriptorFromHandle(handle);
		default:
		return defaultGetDescriptorFromHandle(handle);
	}
}
struct compute_input {
	uint3 dispatch_thread_id_input : SV_DispatchThreadID;
}
[shader("compute")]
[numthreads(1,1,1)]
void main(compute_input input) {
	float var_0 = 2.510000;
	float var_1 = 0.030000;
	float var_2 = 2.430000;
	float var_3 = 0.590000;
	float var_4 = 0.140000;
	global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy] = float4(clamp(((global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_1 + (var_0 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))) / (var_4 + (global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_3 + (var_2 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))))),float3(0.000000, 0.000000, 0.000000),float3(1.000000, 1.000000, 1.000000)),1.000000);
	float var_5 = 2.510000;
	float var_6 = 0.030000;
	float var_7 = 2.430000;
	float var_8 = 0.590000;
	float var_9 = 0.140000;
	global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy] = float4(clamp(((global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_6 + (var_5 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))) / (var_9 + (global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz * (var_8 + (var_7 * global_parameter_block.global_var_8[input.dispatch_thread_id_input.xy].xyz))))),float3(0.000000, 0.000000, 0.000000),float3(1.000000, 1.000000, 1.000000)),1.000000);
}
)"},{"DXIL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,2816903128,528791729,47399820,1594019986,1,4088,7,60,76,92,108,220,1908,1936,810108499,8,33556480,0,826757961,8,0,8,826757967,8,0,8,810963792,104,52,0,0,0,0,0,4294967295,5,0,0,1,1,1,1,1,24,2,1,0,0,13,0,8,1767992576,110,0,1413567571,1680,327782,420,1279875140,262,16,1656,3737142082,3105,411,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963334,537133055,1644614913,4294967288,9437695,6217,3,1113621011,101207072,0,8329,66,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146902032,167774528,2696939750,271631116,2424325937,4184919921,2450585107,2966225439,3862439952,542278152,2753859779,886833356,1032126044,2226119812,1603474100,405419740,2726715782,204604212,51130563,100754745,2248546404,2692946017,3271766082,1892971664,284562425,1416482706,2408780465,2250389212,1091180641,3577792525,1340457837,4266148824,353257546,958022665,139268367,409018657,3356262666,3275872325,1138249701,1212874312,2282541595,683771416,1130902021,3225475906,3694166576,621890855,1141112396,1145848576,596314100,1161084712,889008276,2361637898,3850373573,1611169919,4270360968,3842273632,300962215,167790392,0,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,2148131888,0,0,1137205248,1048832,0,2428502016,537002311,0,2147483648,67342113,128,0,136200960,98312,0,1015414784,16781330,0,201326592,2108025,4,0,1080095256,1024,0,3655610368,524416,0,186646528,4,14,345513522,2420904217,1193675148,440599750,1176019018,211945984,1242866122,2701789347,2150943472,201589444,1881162820,432177158,6748672,0,6265,103,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,2249214992,674267748,2558624795,113970208,2351444161,270036429,2216728706,2364294593,2351713773,1278086125,2360192046,1273908398,1819143564,2187725805,270217264,1661360451,1091403872,33203,2082510855,3056835864,3056644407,3106978607,2553257007,1288749577,2187789840,2215853104,203463169,2290353873,715285284,1556120427,2955936787,583274550,1174674201,270029019,68382102,1811994625,3687779352,2249948176,302187425,1852399981,2821784595,3028486182,1636178017,25977091,2260833305,3758298018,1712980785,1952542572,1636045683,921080162,1094137671,1948395544,1818196069,1281646959,3203451624,3839813862,1746941642,2959738512,3042995206,2374325633,634236621,2379000973,1410353774,2977153825,1268486955,312177531,4039658768,3636653148,2800012012,840779268,3023673148,3107107376,850540454,1375807926,1171197062,2918083758,1823239758,1423985262,2708718370,187401163,2742776690,2068554507,580623219,2270191724,3433418508,254693005,2379034090,1615490670,4039662854,3940468316,3838503132,1829021414,0,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228086,3493739759,1275383348,3274967108,872503362,4176723548,285266433,1840715750,4184922886,17556430,1413747797,307281978,1046487046,3498498930,1022334733,3222343870,859866180,957858860,53774028,2686851282,1022334733,3222343870,859866180,957858860,2399160396,3854783501,289378107,1145390295,1602420969,1477555932,2403067331,1154945343,960169029,3071795473,1892811117,1340329721,2197832775,1841887288,12648475,840,0,1213415752,20,0,3488474519,1374233469,607728447,592380776,1279875140,2144,327782,536,1279875140,262,16,2120,3737142082,3105,527,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963334,537133055,1644614913,4294967288,9437695,6217,3,1113621011,101207072,0,8329,66,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146902032,167774528,2696939750,271631116,2424325937,4184919921,2450585107,2966225439,3862439952,542278152,2753859779,886833356,1032126044,2226119812,1603474100,405419740,2726715782,204604212,51130563,100754745,2248546404,2692946017,3271766082,1892971664,284562425,1416482706,2408780465,2250389212,1091180641,3577792525,1340457837,4266148824,353257546,958022665,139268367,409018657,3356262666,3275872325,1138249701,1212874312,2282541595,683771416,1130902021,3225475906,3694166576,621890855,1141112396,1145848576,596314100,1161084712,889008276,2361637898,3850373573,1611169919,4270360968,3842273632,300962215,167790392,0,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,648240,0,0,1137205248,1048832,0,2428502016,537002311,0,2147483648,67342113,128,0,136200960,98312,0,1015414784,16781330,0,201326592,2108025,4,0,1080095256,1024,0,3655610368,524416,0,186646528,4,10,345513522,2420904217,1193675148,440599750,1243127882,547357794,46432522,1145310212,422048,0,6265,54,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,2249214992,674267748,2558624795,113970208,2351444065,270036429,203462786,203490508,2215838240,679532961,1126707979,2617797635,1006633997,4261056,2777003080,3289402809,203463136,409044686,847515014,579261777,2865234066,3613836994,1447465702,624379622,3784354312,3382040761,3116213709,646449485,1982756964,1702259809,2734838642,3416135950,1494768156,466836633,2497386841,2252548352,911680231,925325047,624375382,3784370808,3518600377,3175212489,3453073829,2885965,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228086,3493739759,1275383348,3274967108,872503362,4176723548,285266433,1840715750,4184922886,17556430,1413747797,307281978,1046487046,3498498930,1022334733,3222343870,859866180,957858860,53774028,2686851282,1022334733,3222343870,859866180,957858860,2399160396,3854783501,289378107,1145390295,1602420969,1477555932,2403067331,1154945343,960169029,3071795473,1892811117,1340329721,2197832775,1841887288,12648475,840,8289,167,742458387,16,24,2483080244,3960807761,2483480896,336515421,102318177,1765862548,1229988116,508661826,147406917,73609472,4169271328,4218439223,3246532712,3276521752,294513643,2272815356,3494260832,2132517575,2020148323,37216507,35444544,1814154711,275998989,8164108,525859,2377146498,3413906497,2147598728,1700796448,2294482304,545259905,2154565656,2173223301,404783105,2509270288,29460673,1410867328,1661833321,1088048,525859,3164627074,3510900353,2147598728,1801459744,2294941152,545260353,2960144408,341860869,1644568674,161678880,546975745,2198446852,522535776,3640208411,2261240176,1614167563,2200023536,2089356687,1675905132,1662984771,3541629240,1327024073,4034410046,2407784881,520118285,3640206363,113756448,2352365129,543980545,1356396547,1739714566,54366112,3894013053,7365171,2449868832,2160194602,117842694,543195648,203391661,1885483113,101195776,3254528786,102958752,1619132423,532854048,1647341836,136314992,2150339078,587669698,2181039878,1119690848,812846120,536928354,743441928,2685977072,3264223681,1886651424,117842695,1348502016,2753544893,646720065,25739268,404783106,167818536,3252428225,2147598728,2975864864,469830208,3414156,1669431816,2685444363,28056322,704815146,1114161824,136743936,549611713,4060590296,3826221489,3357492067,2151581383,8261007,16653087,4062459454,2408653233,2356971789,418972945,837945907,1675891846,3351259395,2407551622,520136205,3640206363,113756448,2755018313,1349286914,2967009285,1739714570,54366112,3894013053,7365171,302385184,3770911804,117842698,543195648,205063109,1885483183,101195776,3281271954,102959872,1619132423,960744736,1647359756,136314992,2554139142,587956419,2181039878,3285524576,817433657,536928354,1037043208,3088630664,3282578242,3501851680,2059,0,}},
};