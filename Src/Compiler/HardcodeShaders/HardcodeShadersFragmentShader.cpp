#include"HardcodeShaders.h"
std::unordered_map<std::string, std::variant<EmbeddedShader::ShaderCodeModule::ShaderResources,std::variant<std::vector<uint32_t>,std::string>>> EmbeddedShader::HardcodeShaders::hardcodeShadersFragmentShader = {{"Reflection_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{0,"",{{"global_ubo_struct_std140",{0,0,0,"global_ubo_struct_std140","uniform",8,292,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(3)}},{"input.var_0.fragPos",{0,0,0,"input.var_0.fragPos","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragNormal",{0,0,1,"input.var_0.fragNormal","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"entryPointParam_main.var_32",{0,0,0,"entryPointParam_main.var_32","float",4,16,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(2)}},{"input.var_0.fragTexCoord",{0,0,2,"input.var_0.fragTexCoord","float",2,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragColor",{0,0,3,"input.var_0.fragColor","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},}}},{"SpirV_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,212,0,131089,1,393227,56,1280527431,1685353262,808793134,0,196622,0,1,851983,4,2,1852399981,0,72,30,34,203,18,20,24,26,196624,2,7,196611,11,1,262149,12,1601331574,49,262149,12,1601331574,49,458757,18,1970302569,1635135092,774922098,1734439526,7565136,524293,20,1970302569,1635135092,774922098,1734439526,1836216142,27745,589829,24,1970302569,1635135092,774922098,1734439526,1131963732,1685221231,0,524293,26,1970302569,1635135092,774922098,1734439526,1869377347,114,1048581,30,1651469415,1885301857,1835102817,1919251557,1869374047,1731095395,1633841004,1651859308,1818701423,1818321519,1918989919,1949185887,1970567269,25970,1048581,34,1651469415,1885301857,1835102817,1919251557,1869374047,1731095395,1633841004,1651859308,1818701423,1818321519,1918989919,1932408671,1819307361,29285,393221,36,1886216563,1231316332,1701273965,0,262149,37,1886216563,6579564,393221,48,1886216563,1231316332,1701273965,0,262149,49,1886216563,6579564,786437,63,1952533855,1400400242,1634889588,1717527911,1952542572,1597274164,1298952003,1919904353,828666995,12340,327686,63,0,1635017060,0,786437,67,1952533855,1400400242,1634889588,1717527911,1952542572,1597208627,1298952003,1919904353,828666995,12340,327686,67,0,1635017060,0,524293,70,1919379297,1952540517,2037669733,811558256,1685353311,3159089,262150,70,0,97,589829,62,1651469415,1969187937,1935634274,1668641396,1953718132,808726884,0,458758,62,0,1651469415,1985965153,811561569,0,458758,62,1,1651469415,1985965153,828338785,0,458758,62,2,1651469415,1985965153,845116001,0,458758,62,3,1651469415,1985965153,861893217,0,458758,62,4,1651469415,1985965153,878670433,0,458758,62,5,1651469415,1985965153,895447649,0,458758,62,6,1651469415,1985965153,912224865,0,458758,62,7,1651469415,1985965153,929002081,0,720901,72,1651469415,1885301857,1835102817,1919251557,1869374047,1731095395,1633841004,1651859308,111,262149,116,1601331574,12849,262149,137,1601331574,14130,589829,203,1920233061,1768902777,1632662638,1601003890,1852399981,1918989870,3289951,262149,2,1852399981,0,262215,18,30,0,262215,20,30,1,262215,24,30,2,262215,26,30,3,262215,30,33,1,262215,30,34,0,262215,34,33,2,262215,34,34,0,262215,64,6,16,327752,63,0,35,0,262215,68,6,16,327752,67,0,35,0,327752,70,0,35,0,196679,62,2,327752,62,0,35,0,327752,62,1,35,64,327752,62,2,35,112,327752,62,3,35,176,327752,62,4,35,240,327752,62,5,35,256,327752,62,6,35,272,327752,62,7,35,288,262215,72,33,0,262215,72,34,0,262215,203,30,0,131091,1,196641,3,1,196630,6,32,262167,7,6,4,262167,10,6,3,262176,11,7,10,262176,17,1,10,262167,21,6,2,262176,23,1,21,589849,27,6,1,2,0,0,1,0,262176,29,0,27,131098,31,262176,33,0,31,196635,35,27,131092,40,262187,6,42,1008981770,262187,6,58,1025758986,393260,10,57,58,58,58,262187,6,60,1056964608,393260,10,59,60,60,60,262165,65,32,1,262187,65,66,4,262172,64,7,66,196638,63,64,262187,65,69,3,262172,68,10,69,196638,67,68,196638,70,65,655390,62,63,67,63,63,10,10,10,70,262176,71,2,62,262176,73,2,10,262187,65,78,6,262187,6,87,0,262187,6,96,3211788288,262187,6,98,1065353216,262187,6,100,1078530012,393260,10,124,98,98,98,262187,6,135,1084227584,262187,6,144,1031798784,262187,6,146,1060634624,262187,6,148,1049624576,262187,6,172,1082130432,262187,6,178,953267991,262187,65,182,5,262187,6,196,1022739087,393260,10,195,196,196,196,262176,202,3,7,262203,17,18,1,262203,17,20,1,262203,23,24,1,262203,17,26,1,262203,29,30,0,262203,33,34,0,262203,71,72,2,262203,202,203,3,262187,6,210,1050868098,393260,10,211,210,210,210,327734,1,2,0,3,131320,4,262203,11,12,7,262205,10,16,18,262205,10,19,20,262205,21,22,24,262205,10,25,26,262205,27,28,30,262205,31,32,34,327766,35,36,28,32,393303,7,37,36,22,0,327761,6,39,37,3,327866,40,41,39,42,196855,15,0,262394,41,14,13,131320,13,196670,12,25,131321,15,131320,14,262205,27,46,30,262205,31,47,34,327766,35,48,46,47,393303,7,49,48,22,0,524367,10,51,49,49,0,1,2,196670,12,51,131321,15,131320,15,262205,10,54,12,524300,10,55,56,46,57,54,59,393228,10,61,56,69,19,327746,73,74,72,66,262205,10,75,74,327811,10,76,75,16,393228,10,77,56,69,76,327746,73,79,72,78,262205,10,80,79,327811,10,81,80,16,393228,10,82,56,69,81,327809,10,83,77,82,393228,10,84,56,69,83,327828,6,85,61,84,458764,6,86,56,40,85,87,393228,10,88,56,69,76,393228,10,89,56,69,81,327809,10,90,88,89,393228,10,91,56,69,90,327828,6,92,61,91,458764,6,93,56,40,92,87,327813,6,94,86,93,327813,6,95,94,96,327809,6,97,95,98,327813,6,99,100,97,393228,10,101,56,69,76,393228,10,102,56,69,81,327809,10,103,101,102,393228,10,104,56,69,103,327828,6,105,61,104,458764,6,106,56,40,105,87,393228,10,107,56,69,76,393228,10,108,56,69,81,327809,10,109,107,108,393228,10,110,56,69,109,327828,6,111,61,110,458764,6,112,56,40,111,87,327813,6,113,106,112,327813,6,114,113,96,327809,6,115,114,98,327813,6,116,99,115,393228,10,117,56,69,76,327828,6,118,61,117,458764,6,119,56,40,118,87,393228,10,120,56,69,81,327828,6,121,61,120,458764,6,122,56,40,121,87,327811,10,123,124,55,393228,10,125,56,69,76,393228,10,126,56,69,81,327809,10,127,125,126,393228,10,128,56,69,127,393228,10,129,56,69,76,327828,6,130,128,129,524300,6,131,56,43,130,87,98,327811,6,132,98,131,524300,6,133,56,43,132,87,98,458764,6,134,56,26,133,135,327822,10,136,123,134,327809,10,137,55,136,327811,10,138,124,137,327813,10,140,138,54,327813,10,142,140,211,327816,6,143,144,116,327813,6,145,122,146,327809,6,147,145,148,327816,6,149,122,147,327813,6,150,119,146,327809,6,151,150,148,327816,6,152,119,151,327813,6,153,149,152,327813,6,154,143,153,393228,10,155,56,69,76,393228,10,156,56,69,81,327809,10,157,155,156,393228,10,158,56,69,157,393228,10,159,56,69,76,327828,6,160,158,159,524300,6,161,56,43,160,87,98,327811,6,162,98,161,524300,6,163,56,43,162,87,98,458764,6,164,56,26,163,135,327822,10,165,123,164,327809,10,166,55,165,327822,10,167,166,154,393228,10,168,56,69,76,327828,6,169,61,168,458764,6,170,56,40,169,87,327813,6,171,172,170,393228,10,173,56,69,81,327828,6,174,61,173,458764,6,175,56,40,174,87,327813,6,176,171,175,327809,6,177,176,178,393296,10,179,177,177,177,327816,10,180,167,179,327809,10,181,142,180,327746,73,183,72,182,262205,10,184,183,327813,10,185,181,184,393228,10,186,56,69,81,327828,6,187,61,186,458764,6,188,56,40,187,87,327822,10,189,185,188,327813,10,194,195,54,327809,10,197,194,189,327760,7,198,197,98,196670,203,198,65789,65592,}},{"GLSL_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
layout(row_major) uniform;
layout(row_major) buffer;

#line 561 0
struct _MatrixStorage_float4x4_ColMajorstd140_0
{
    vec4  data_0[4];
};


#line 12399
struct _MatrixStorage_float3x3_ColMajorstd140_0
{
    vec3  data_1[3];
};


#line 4 1
struct aggregate_type_0_std140_0
{
    int a_0;
};


#line 4
struct global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
    aggregate_type_0_std140_0 global_var_7_0;
};


#line 3
layout(binding = 0)
layout(std140) uniform block_global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
    aggregate_type_0_std140_0 global_var_7_0;
}global_parameter_block_global_ubo_0;

#line 1875 0
layout(binding = 1)
uniform texture2D global_parameter_block_global_ubo_global_var_7_texture_0;


#line 890
layout(binding = 2)
uniform sampler global_parameter_block_global_ubo_global_var_7_sampler_0;


#line 12442
layout(location = 0)
out vec4 entryPointParam_main_var_32_0;


#line 12442
layout(location = 0)
in vec3 input_var_0_fragPos_0;


#line 12442
layout(location = 1)
in vec3 input_var_0_fragNormal_0;


#line 12442
layout(location = 2)
in vec2 input_var_0_fragTexCoord_0;


#line 12442
layout(location = 3)
in vec3 input_var_0_fragColor_0;


#line 35 1
struct fragment_output_0
{
    vec4 var_32_0;
};


#line 39
void main()
{

#line 40
    fragment_output_0 output_0;

    vec4 _S1 = (texture(sampler2D(global_parameter_block_global_ubo_global_var_7_texture_0,global_parameter_block_global_ubo_global_var_7_sampler_0), (input_var_0_fragTexCoord_0)));

#line 42
    vec3 var_1_0;

#line 42
    if((_S1.w) > 0.00999999977648258)
    {

#line 42
        var_1_0 = _S1.xyz;

#line 42
    }
    else
    {

#line 42
        var_1_0 = input_var_0_fragColor_0;

#line 42
    }

#line 51
    vec3 var_4_0 = mix(vec3(0.03999999910593033, 0.03999999910593033, 0.03999999910593033), var_1_0, vec3(0.5));

#line 59
    vec3 _S2 = normalize(input_var_0_fragNormal_0);

#line 59
    vec3 _S3 = normalize(global_parameter_block_global_ubo_0.global_var_4_0 - input_var_0_fragPos_0);

#line 59
    vec3 _S4 = normalize(global_parameter_block_global_ubo_0.global_var_6_0 - input_var_0_fragPos_0);

#line 59
    vec3 _S5 = normalize(_S3 + _S4);

#line 59
    float _S6 = max(dot(_S2, _S5), 0.0);

#line 59
    float _S7 = _S6 * _S6 * -0.9375 + 1.0;
    float var_13_0 = max(dot(_S2, _S3), 0.0);

#line 65
    float var_18_0 = max(dot(_S2, _S4), 0.0);

#line 71
    const vec3 var_24_0 = vec3(1.0, 1.0, 1.0);


    vec3 var_27_0 = var_4_0 + (var_24_0 - var_4_0) * pow(clamp(1.0 - clamp(dot(_S5, _S3), 0.0, 1.0), 0.0, 1.0), 5.0);

#line 80
    output_0.var_32_0 = vec4(vec3(0.02999999932944775, 0.02999999932944775, 0.02999999932944775) * var_1_0 + ((var_24_0 - var_27_0) * var_1_0 / 3.14159297943115234 + 0.0625 / (3.14159297943115234 * _S7 * _S7) * (var_18_0 / (var_18_0 * 0.71875 + 0.28125) * (var_13_0 / (var_13_0 * 0.71875 + 0.28125))) * var_27_0 / (4.0 * var_13_0 * var_18_0 + 0.00009999999747379)) * global_parameter_block_global_ubo_0.global_var_5_0 * var_18_0, 1.0);

#line 80
    entryPointParam_main_var_32_0 = output_0.var_32_0;

#line 80
    return;
}

)"},{"HLSL_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"()"},{"Slang_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(struct aggregate_type_0 {
	Texture2D<float4> texture;
	SamplerState sampler;
	int a;
}
struct aggregate_type_1 {
	float3 inPosition;
	float3 inNormal;
	float2 inTexCoord;
	float3 inColor;
}
struct aggregate_type_2 {
	float3 fragPos;
	float3 fragNormal;
	float2 fragTexCoord;
	float3 fragColor;
}
struct global_ubo_struct {
	float4x4 global_var_0;
	float3x3 global_var_1;
	float4x4 global_var_2;
	float4x4 global_var_3;
	float3 global_var_4;
	float3 global_var_5;
	float3 global_var_6;
	aggregate_type_0 global_var_7;
}
struct parameter_block_struct {
	ConstantBuffer<global_ubo_struct> global_ubo;
}
ParameterBlock<parameter_block_struct> global_parameter_block;
struct fragment_input {
	aggregate_type_2 var_0 : LOCATION0;
}
struct fragment_output {
	float4 var_32 : SV_TARGET0;
}
[shader("fragment")]
fragment_output main(fragment_input input) {
	fragment_output output;
	float3 var_1 = float3(0.000000, 0.000000, 0.000000);
	if ((global_parameter_block.global_ubo.global_var_7.texture.Sample(global_parameter_block.global_ubo.global_var_7.sampler,input.var_0.fragTexCoord).w > 0.010000)) {
		var_1 = global_parameter_block.global_ubo.global_var_7.texture.Sample(global_parameter_block.global_ubo.global_var_7.sampler,input.var_0.fragTexCoord).xyz;
	}
	else {
		var_1 = input.var_0.fragColor;
	}
	float var_2 = 0.500000;
	float var_3 = 0.500000;
	float3 var_4 = float3(0.040000, 0.040000, 0.040000);
	var_4 = lerp(var_4,var_1,var_3);
	float3 var_5 = float3(0.000000, 0.000000, 0.000000);
	float var_6 = 1.000000;
	float var_7 = var_2;
	float var_8 = ((var_7 * var_7) * (var_7 * var_7));
	float var_9 = 1.000000;
	float var_10 = 1.000000;
	float var_11 = 3.141593;
	float var_12 = ((var_11 * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10)) * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10));
	float var_13 = max(dot(normalize(input.var_0.fragNormal),normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos))),0.000000);
	float var_14 = 1.000000;
	float var_15 = 8.000000;
	float var_16 = var_13;
	float var_17 = 1.000000;
	float var_18 = max(dot(normalize(input.var_0.fragNormal),normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))),0.000000);
	float var_19 = 1.000000;
	float var_20 = 8.000000;
	float var_21 = var_18;
	float var_22 = 1.000000;
	float var_23 = 1.000000;
	float3 var_24 = float3(1.000000, 1.000000, 1.000000);
	float var_25 = 4.000000;
	float var_26 = 0.000100;
	float3 var_27 = (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos)))),normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)));
	float3 var_28 = float3(1.000000, 1.000000, 1.000000);
	float var_29 = 1.000000;
	float var_30 = 3.141593;
	var_5 = (var_5 + ((((((var_28 - var_27) * var_1) / var_30) + ((((var_8 / var_12) * ((var_21 / ((var_18 * (var_22 - (((var_2 + var_19) * (var_2 + var_19)) / var_20))) + (((var_2 + var_19) * (var_2 + var_19)) / var_20))) * (var_16 / ((var_13 * (var_17 - (((var_2 + var_14) * (var_2 + var_14)) / var_15))) + (((var_2 + var_14) * (var_2 + var_14)) / var_15))))) * (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos)))),normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)))) / (((var_25 * max(dot(normalize(input.var_0.fragNormal),normalize((global_parameter_block.global_ubo.global_var_4 - input.var_0.fragPos))),0.000000)) * max(dot(normalize(input.var_0.fragNormal),normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))),0.000000)) + var_26))) * (global_parameter_block.global_ubo.global_var_5 * var_6)) * max(dot(normalize(input.var_0.fragNormal),normalize((global_parameter_block.global_ubo.global_var_6 - input.var_0.fragPos))),0.000000)));
	float3 var_31 = float3(0.030000, 0.030000, 0.030000);
	output.var_32 = float4(((var_31 * var_1) + var_5),1.000000);
	return output;
}
)"},{"DXIL_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,4060824185,251377856,210823390,895756678,1,6556,7,60,76,232,292,652,3256,3284,810108499,8,0,0,826757961,148,4,8,0,136,0,0,3,0,1799,0,0,136,1,0,3,1,1799,0,0,136,2,0,3,2,771,0,0,136,3,0,3,3,1799,0,1094930252,1313818964,0,826757967,52,1,8,0,40,0,64,3,0,15,0,1415534163,1701278305,116,810963792,352,52,0,0,0,0,0,4294967295,0,67109124,1,0,0,0,37,3,24,2,0,0,0,13,0,1,0,0,0,14,0,3,0,0,0,2,0,44,1129270272,1330205761,1330380878,1230258499,1275088463,1413563215,5132105,1094930252,1313818964,1767992576,110,4,0,1,2,3,16,1,0,4390913,515,10,1,4391169,515,19,2,4325889,515,28,3,4391681,515,0,0,272891905,3,7,7,7,0,7,7,7,0,7,7,0,0,1,2,4,0,1413567571,2596,102,649,1279875140,262,16,2572,3737142082,3105,640,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,125,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146916368,167774528,149291110,9330880,272680489,1368408388,2283831308,2799968354,3962041057,629089313,4237858212,827438818,1346421516,4184919921,2450585107,2966225439,173549584,856428707,272679692,1095581892,2249744902,703076449,336347331,2250269205,2258871937,2276499403,2741927056,4237858186,823244514,2286994188,2986893450,2133728110,4064419522,2826060375,3369214024,1114146937,67701000,1619396689,437176880,516063022,1113059906,1080463578,3306176772,173031708,2382944390,1635811770,2845336068,495044109,3860750786,2707951041,511832092,3390980586,2168983105,480373775,3726541254,3237486145,501340188,3625877954,3236432896,264290319,3658432756,1642077473,511802910,3390964210,1287914753,3960352866,821235216,188771855,4094656741,1358040912,171995662,3842990204,4042526256,130085390,4010721510,3237219856,121659398,2114322558,607126656,3015706929,613418372,145097119,1902312633,2110245248,820249884,2162438338,11572857,3224626322,1603739924,4180676140,3768811447,580537532,3229390922,12722736,2963268134,2682910855,2591097158,815023412,81970937,2169762496,1146309619,592433929,3536536740,3337932084,10246336,2282225240,2291697152,1192628200,1902345808,2851692546,342489536,618575016,1277497677,3476032318,82592834,134874188,2558669674,327715,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,2148131888,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,192,0,127812352,32776,0,1015414784,16781329,0,201326592,2107001,2,0,1079570968,3072,0,3387174912,524416,0,3361734656,268501459,0,1073741824,2070,28,412622386,2420904217,1193675148,574817478,1176019018,614500864,278960394,169648330,62955568,3231734794,10701319,2694056457,2747926912,1464468428,682110112,578818441,688030504,269189636,3531673616,1733427225,27092992,2147907104,2046826972,3793652423,954207800,3727374,436736032,103,6265,256,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,742425189,2558624795,114036768,3223859393,270036429,2350946434,252713729,3302938830,3770603714,3670205634,3838503114,3738748094,3468613318,3267682008,3303718616,3637427934,3636643038,3837979838,3904794302,3941134538,1623116516,860096550,228335681,1215091074,2352047372,228340097,1614885825,417346691,2310910364,3246240133,3045443973,3382038933,3182528893,2642259341,2240396721,2312469937,1287749053,57116688,1636975714,565187340,1846027936,2210662048,2973218355,3090134576,3065035056,3107109426,3082170671,867153329,816920502,2973413302,3056840631,3056644407,3106978607,3115293615,3057137328,2553264434,1566672909,3222811014,1088094342,1301626944,216060944,3182533864,2108786057,2110359001,1287748801,3278374928,80508368,136743041,553759876,217826872,2632476720,2240396721,2245623217,2093317577,3189271745,270571919,277087955,1040999939,2256732210,2614827470,2547718232,2547816541,80484300,540450945,3727694212,3495954039,2070100432,4217572115,4220718002,2575497626,114626592,3322103940,201381115,1818704410,1818321519,1918989919,811545695,2596406291,114757664,2944622724,1906360333,432967555,408460251,2556270555,399333340,3229680844,470032438,100692348,1954290573,3302938830,3971930306,1824449730,136732862,553760324,61071590,3772540976,4140200867,4140176934,4146468709,856028021,229908545,3741802756,2789764125,872622128,2419557208,2210413187,2551857673,800098049,2969963928,100769543,3818981085,448924035,2181480864,2204319376,2260860208,1089657027,264305167,545415488,226499328,2735354243,2233475504,169919245,2017538213,282604931,3062432412,574043312,1094930252,1313818964,2615313427,2959086624,136720417,273422405,551039242,1638948988,358700081,1544921432,2198173793,1130455061,106458160,1443190869,408356240,90202462,806410328,3689907227,2963943600,188787722,45625518,2964654787,741799969,44837535,729996331,2985340684,543960066,1813406050,1285035777,2236710233,3516243401,831131725,1679040664,3055567152,198689293,390272539,1511481686,1577457025,398546992,2965308470,1879427169,1879582208,68879952,339090499,3775565986,218336672,817346099,34191802,1934143937,2610668443,2367492128,800306361,34189878,1268306401,2744843067,2253865507,653714935,692172503,121139975,1963411572,495880024,1819028102,1764650358,1953391972,178291283,1569431065,3663518873,2157239195,3884335720,1724258146,624371287,3784370736,2241973433,902403473,2979369405,848300365,1915648100,1970238309,1936024434,313295443,1561042457,2421775390,1562106779,2614779160,18144475,245451284,1569431065,308140378,408753369,3767851357,3784370708,3518600377,3175212489,3453073829,2714110285,3416135947,463297496,3705444701,1933460,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228102,3493739759,1275383348,3274967108,872519746,4176723548,285266433,1840715750,4184922887,17556430,1413747797,307281978,2120228870,3499547505,1022334733,3222343870,859866180,957858860,53774028,3762690258,1022334732,3075268862,95870047,1004913484,3224944527,890189344,3681404409,3193713664,3222468851,400624444,3573706167,3821992304,286495563,3560781096,1840715748,4184919813,223601614,1904107792,809502427,53760,0,1213415752,20,0,1762643778,2909585769,527656705,2029791726,1279875140,3264,102,816,1279875140,262,16,3240,3737142082,3105,807,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,125,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146916368,167774528,149291110,9330880,272680489,1368408388,2283831308,2799968354,3962041057,629089313,4237858212,827438818,1346421516,4184919921,2450585107,2966225439,173549584,856428707,272679692,1095581892,2249744902,703076449,336347331,2250269205,2258871937,2276499403,2741927056,4237858186,823244514,2286994188,2986893450,2133728110,4064419522,2826060375,3369214024,1114146937,67701000,1619396689,437176880,516063022,1113059906,1080463578,3306176772,173031708,2382944390,1635811770,2845336068,495044109,3860750786,2707951041,511832092,3390980586,2168983105,480373775,3726541254,3237486145,501340188,3625877954,3236432896,264290319,3658432756,1642077473,511802910,3390964210,1287914753,3960352866,821235216,188771855,4094656741,1358040912,171995662,3842990204,4042526256,130085390,4010721510,3237219856,121659398,2114322558,607126656,3015706929,613418372,145097119,1902312633,2110245248,820249884,2162438338,11572857,3224626322,1603739924,4180676140,3768811447,580537532,3229390922,12722736,2963268134,2682910855,2591097158,815023412,81970937,2169762496,1146309619,592433929,3536536740,3337932084,10246336,2282225240,2291697152,1192628200,1902345808,2851692546,342489536,618575016,1277497677,3476032318,82592834,134874188,2558669674,327715,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,648240,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,192,0,127812352,32776,0,1015414784,16781329,0,201326592,2107001,2,0,1079570968,3072,0,3387174912,524416,0,3361734656,268501459,0,1073741824,2070,19,345513522,2420904217,1193675148,574817478,1243127882,144704610,211851530,2822545866,2148632872,42149922,193070121,2165313552,1912609240,501743719,3817372203,954433592,2147541888,2624069696,1,6265,108,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,742425189,2558624795,114036768,3223859297,270036429,270571650,207684813,68354618,673241538,1497663174,437863704,1007737285,3493200915,3015968806,1176654081,3624470097,68373520,540465207,3391669578,35324064,16843627,2017539540,2420338179,2147749965,2589481796,2812678427,2762612897,1107928871,168840497,1285571434,2188020240,68376656,270572034,207685329,2730713288,101178996,2173186145,2260833778,212916320,1100871581,811731992,565208444,1661482600,2518353456,884929446,203522824,906842010,1638949636,4224615193,101458136,2944604209,1712338444,3496674944,2896579590,3837962430,652790478,1094042888,34189352,3322965281,741740096,1886919626,283051520,121096711,3627680283,490846256,939791104,3389535944,908618781,1009782478,1724301992,1184032471,927393366,2427062309,2514008545,3181759945,2282311097,779641894,1986814326,39023205,2652442275,408558795,3546061145,3675871515,1126760596,1461905286,660010806,926307895,2431301669,2782444001,2435177877,3515208013,2986954133,779641914,1920233061,1768902777,1400075374,15362,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228102,3493739759,1275383348,3274967108,872519746,4176723548,285266433,1840715750,4184922887,17556430,1413747797,307281978,2120228870,3499547505,1022334733,3222343870,859866180,957858860,53774028,3762690258,1022334732,3075268862,95870047,1004913484,3224944527,890189344,3681404409,3193713664,3222468851,400624444,3573706167,3821992304,286495563,3560781096,1840715748,4184919813,223601614,1904107792,809502427,53760,8289,322,742458387,16,47,1342213572,340001361,1268033864,1901991049,1766073492,366563860,248070380,2496217748,3256203601,1661796364,2396927748,4601645,2189959298,134289601,2381193346,136347665,18407390,154308591,3187958534,405005309,545264012,811641352,4125270086,73628201,3917613088,2181056055,1669282848,2548769284,4031133674,2063266002,1579811939,1178055327,136348160,704930687,800235358,294387916,3792183424,1627392223,4033284211,1714954700,105940784,2321677,3545043059,1292923736,2352239827,3157572625,8158,525859,2312134786,2114983938,102958800,1619132424,407014864,115375888,525859,2446352514,2685409410,102958832,1619132423,419600784,1099483652,404783106,4260408856,2179737729,9462327,3322284064,671186987,2082226828,591395,3227541634,42211394,402780201,2365580,293700104,171991563,1627906213,9462320,2248542240,692161580,2283602584,37849281,404234368,2852536499,815794800,151397126,1616937472,2887336656,30943746,605588505,2172782592,3227913041,168864010,2422354021,101195776,2174496134,683845674,1099481496,404783106,109098776,2030743723,102958704,1619132425,440590432,2418737840,411834882,2181562396,1879778881,102978800,1619132423,474140048,3246970172,404783107,125876532,3676610626,2964261622,1114168070,136743936,549611713,3272615564,109069424,1356675010,1131725132,231934257,1356346565,3249664006,3278102540,2261237785,227512372,455024746,910049494,1820066228,3640132464,435160816,268458033,491225860,818626814,205964077,3238264844,1359434272,3839896584,522650211,2365143067,134224920,247824770,3775287466,1088048,809634211,906506394,1820082560,3640165120,435226112,268458033,516391684,2182111574,205916225,3238264844,1460122144,3825773576,522224995,2365130283,134229016,263438722,3443060912,102958112,1619132423,746842416,1647344900,136314992,3762198022,3271040194,2348827240,1757480998,3772260546,3249664262,2204361229,3295134747,272630112,3365019148,101204357,808523809,2198081536,561521800,2408587952,2893840917,1647567896,136315056,4165619462,2205009730,471370768,3246524416,283120260,3264578220,1288160281,1675758817,4043731111,94910513,3625720057,235699330,3057533294,632418404,422416259,369903228,3770745856,410290593,2182111364,197393,1753755713,721558914,559479042,1099614152,184951614,4032856576,205227236,1611010114,471371248,3246524416,284169092,3246965484,404783105,259078476,798502721,823783684,68157496,3861342595,293990433,1090519939,1115199536,409993759,268447793,667452164,2159026754,1647567901,136314976,2421690630,633430084,4180546335,3351867608,3792970110,521208163,2287011595,2084898191,558242924,4044887614,127424177,3361757433,513891527,562127844,2072345375,2248511376,369903228,3770745856,680725385,2232963589,205966157,3238264846,2483782240,2193745416,2216050240,611089540,1092155522,2466432968,1139380112,134946576,71997689,540586484,1616443657,967962642,2724456456,2985431664,1675633952,3352301732,373179272,1580331528,418906888,2080474159,12720012,4061148734,2408620465,2893841933,1044542485,2088927254,4161398828,3352301976,1715372300,1639052300,2204360716,2261237784,2295300144,545259969,3517929496,392243222,805374371,2734956698,3277882121,236658465,3362838777,2421655239,548408719,1096948511,45626942,91253884,182507768,1211177456,50597888,3270392868,904096822,75698566,1076904192,1815012290,1128806083,4731160,604177424,918744636,2184561516,295697,3258986561,3278647011,740514358,16,0,}},{"DXBC_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,562756836,2489812593,3188319877,2490763199,1,3240,5,52,1012,1136,1188,3084,1178944594,952,1,332,3,60,4294903041,1051904,912,625218323,60,24,40,40,36,12,0,180,3,0,0,0,0,1,0,0,0,237,2,5,4,4294967295,0,1,12,0,0,294,0,0,0,0,0,1,1,0,0,1651469415,1885301857,1835102817,1919251557,1869374047,1734306659,1633841004,1651859308,1818713967,1818321519,1918989919,1935619935,1819307361,811561573,1869375232,1600938338,1634886000,1702126957,1818386290,1600873327,1651469415,1969187937,1734307682,1633841004,1635147628,1597464434,1954047348,1600483957,1818689584,1818321519,1918988383,1952804193,1650422373,1801678700,1869375327,1600938338,1601135221,2880110640,294,1,356,304,0,0,294,0,292,2,876,0,4294967295,0,4294967295,0,1651469415,1969187937,1935634274,1668641396,3170164,1651469415,1985965153,811561569,1711288415,1952542572,3438644,196611,262148,0,0,0,0,0,0,431,1651469415,1985965153,828338785,1711288415,1952542572,3373107,196611,196611,0,0,0,0,0,0,491,1651469415,1985965153,845116001,1728065631,1633841004,1635147628,1597202290,1818689584,1818321519,1918989919,811545695,1869374976,3372129,196609,196609,0,0,0,0,0,0,581,1651469415,1985965153,895447649,1728065631,1633841004,1635147628,1597398898,1818689584,1818321519,1918989919,811546463,1734828288,1634166130,1952408948,1600483449,3170096,3170145,7630441,131072,65537,0,0,0,0,0,0,692,688,696,0,5,65537,65536,732,0,0,0,0,669,416,440,0,476,500,64,536,440,112,551,440,176,566,588,240,624,588,256,639,588,272,654,744,288,5,4390913,524288,780,0,0,0,0,396,1919117645,1718580079,1378361460,1279795241,1394625619,1701077352,1866670194,1818849389,824210021,3223088,1313297225,116,4,8,104,0,0,3,0,1799,104,1,0,3,1,1799,104,2,0,3,2,771,104,3,0,3,3,1799,1094930252,1313818964,2880154368,1313297231,44,1,8,32,0,0,3,0,15,1415534163,1162302017,2880110676,1480935507,1888,81,472,16779370,117440601,3182150,0,0,0,18,0,100663386,3173958,0,0,0,0,117446744,3178054,0,0,0,21845,0,50335842,1052786,0,50335842,1052786,1,50335842,1052722,2,50335842,1052786,3,50331749,1057010,0,33554536,7,184549445,1048818,0,1052742,2,2129478,0,0,2121728,0,0,117440561,1048706,0,16385,1008981770,1048634,0,50331679,1048634,0,83886134,1048690,0,1053254,3,16777237,167772160,1048690,1,1049158,0,16386,3173242634,3173242634,3173242634,0,251658290,1048690,1,1049158,1,16386,1056964608,1056964608,1056964608,0,16386,1025758986,1025758986,1025758986,0,117440528,1048706,0,1053254,1,1053254,1,83886148,1048706,0,1048634,0,117440568,1048690,2,1052662,0,1053254,1,167772160,1048690,3,2148536902,65,0,3179078,0,0,15,117440528,1048706,0,1049158,3,1049158,3,83886148,1048706,0,1048634,0,117440568,1048690,4,1052662,0,1049158,3,117440528,1048706,1,1049158,2,1049158,4,117440564,1048706,1,1048634,1,16385,0,167772160,1048690,5,2148536902,65,0,3179078,0,0,17,117440528,1048706,2,1049158,5,1049158,5,83886148,1048706,2,1048634,2,117440568,1048690,5,1052662,2,1049158,5,117440528,1048706,2,1049158,2,1049158,5,117440564,1048706,2,1048634,2,16385,0,184549376,1048690,6,2148532806,65,1,16386,1065353216,1065353216,1065353216,0,150994994,1048690,3,1049158,3,1052662,0,1049158,5,117440528,1048706,0,1049158,3,1049158,3,83886148,1048706,0,1048634,0,117440568,1048690,3,1052662,0,1049158,3,117448720,1048706,0,1049158,3,1049158,4,134217728,1048706,0,2148532282,65,0,16385,1065353216,117440568,1048706,3,1048634,0,1048634,0,117440568,1048706,3,1048634,3,1048634,3,117440568,1048706,0,1048634,0,1048634,3,150994994,1048690,1,1049158,6,1052662,0,1049158,1,184549376,1048690,4,2148532806,65,1,16386,1065353216,1065353216,1065353216,0,117440568,1048690,4,1049158,0,1049158,4,117440528,1048706,0,1049158,2,1049158,3,117440564,1048706,0,1048634,0,16385,0,117440568,1048706,0,1048634,0,1048634,0,150994994,1048706,0,1048634,0,16385,3211788288,16385,1065353216,117440568,1048706,0,1048634,0,1048634,0,117440568,1048706,0,1048634,0,16385,1078530012,117440526,1048706,0,16385,1031798784,1048634,0,150994994,1048594,2,1048634,2,16385,1060634624,16385,1049624576,117440526,1048594,2,1048634,2,1048586,2,150994994,1048610,2,1048634,1,16385,1060634624,16385,1049624576,117440526,1048610,2,1048634,1,1048602,2,117440568,1048594,2,1048602,2,1048586,2,117440568,1048706,0,1048634,0,1048586,2,117440568,1048690,1,1049158,1,1052662,0,117440568,1048706,0,1048634,1,1048634,2,150994994,1048706,0,1048634,0,16385,1082130432,16385,953267991,117440526,1048690,1,1049158,1,1052662,0,201326642,1048690,1,1049158,4,16386,1050868098,1050868098,1050868098,0,1049158,1,150995000,1048690,1,1049158,1,3179078,0,0,16,117440568,1048690,1,1052662,2,1049158,1,201326642,1056882,0,1049158,0,16386,1022739087,1022739087,1022739087,0,1049158,1,83886134,1056898,0,16385,1065353216,16777278,1413567571,148,58,7,0,5,52,0,0,1,1,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,}},{"Reflection_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{8,"global_push_constant",{{"global_ubo_struct_std140",{3,0,0,"global_ubo_struct_std140","uniform",8,308,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(3)}},{"input.var_0.fragPos",{0,0,0,"input.var_0.fragPos","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragNormal",{0,0,1,"input.var_0.fragNormal","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"entryPointParam_main.var_32",{0,0,0,"entryPointParam_main.var_32","float",4,16,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(2)}},{"input.var_0.fragTexCoord",{0,0,2,"input.var_0.fragTexCoord","float",2,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragColor",{0,0,3,"input.var_0.fragColor","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"global_push_constant.global_ubo",{0,0,0,"global_ubo","",0,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(0)}},}}},{"SpirV_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,351,0,131089,5302,131089,1,393227,116,1280527431,1685353262,808793134,0,196622,0,1,917519,4,2,1852399981,0,31,342,18,20,24,26,75,61,48,196624,2,7,196611,11,1,262149,12,1601331574,49,262149,12,1601331574,49,458757,18,1970302569,1635135092,774922098,1734439526,7565136,524293,20,1970302569,1635135092,774922098,1734439526,1836216142,27745,589829,24,1970302569,1635135092,774922098,1734439526,1131963732,1685221231,0,524293,26,1970302569,1635135092,774922098,1734439526,1869377347,114,720901,27,1651469415,1885301857,1600680821,1936617315,1953390964,1920234335,1601463157,878998643,12339,393222,27,0,1651469415,1969187937,28514,524293,31,1651469415,1885301857,1600680821,1936617315,1953390964,0,786437,40,1952533855,1400400242,1634889588,1717527911,1952542572,1597274164,1298952003,1919904353,828666995,12340,327686,40,0,1635017060,0,786437,43,1952533855,1400400242,1634889588,1717527911,1952542572,1597208627,1298952003,1919904353,828666995,12340,327686,43,0,1635017060,0,524293,46,1919379297,1952540517,2037669733,811558256,1685353311,3159089,327686,46,0,1954047348,6648437,327686,46,1,1886216563,7497068,262150,46,2,97,589829,39,1651469415,1969187937,1935634274,1668641396,1953718132,808726884,0,458758,39,0,1651469415,1985965153,811561569,0,458758,39,1,1651469415,1985965153,828338785,0,458758,39,2,1651469415,1985965153,845116001,0,458758,39,3,1651469415,1985965153,861893217,0,458758,39,4,1651469415,1985965153,878670433,0,458758,39,5,1651469415,1985965153,895447649,0,458758,39,6,1651469415,1985965153,912224865,0,458758,39,7,1651469415,1985965153,929002081,0,393221,48,1717990754,1632137829,1701602414,115,393221,61,1954047348,1214607989,1818521185,29541,393221,75,1886216563,1215456620,1818521185,29541,393221,81,1886216563,1231316332,1701273965,0,262149,82,1886216563,6579564,393221,108,1886216563,1231316332,1701273965,0,262149,109,1886216563,6579564,262149,199,1601331574,12849,262149,245,1601331574,14130,589829,342,1920233061,1768902777,1632662638,1601003890,1852399981,1918989870,3289951,262149,2,1852399981,0,262215,18,30,0,262215,20,30,1,262215,24,30,2,262215,26,30,3,196679,27,2,327752,27,0,35,0,262215,41,6,16,327752,40,0,35,0,262215,44,6,16,327752,43,0,35,0,327752,46,0,35,0,327752,46,1,35,8,327752,46,2,35,16,196679,39,2,327752,39,0,35,0,327752,39,1,35,64,327752,39,2,35,112,327752,39,3,35,176,327752,39,4,35,240,327752,39,5,35,256,327752,39,6,35,272,327752,39,7,35,288,262215,48,33,0,262215,48,34,3,262215,61,33,0,262215,61,34,2,262215,75,33,0,262215,75,34,1,262215,342,30,0,131091,1,196641,3,1,196630,6,32,262167,7,6,4,262167,10,6,3,262176,11,7,10,262176,17,1,10,262167,21,6,2,262176,23,1,21,262165,28,32,0,262167,29,28,2,196638,27,29,262176,30,9,27,262165,32,32,1,262187,32,33,0,262176,34,9,29,262187,32,42,4,262172,41,7,42,196638,40,41,262187,32,45,3,262172,44,10,45,196638,43,44,327710,46,29,29,32,655390,39,40,43,40,40,10,10,10,46,196637,38,39,262176,47,2,38,262176,49,2,39,262187,32,51,7,262176,52,2,46,262176,54,2,29,589849,59,6,1,2,0,0,1,0,196637,58,59,262176,60,0,58,262176,62,0,59,262187,32,68,1,131098,73,196637,72,73,262176,74,0,72,262176,76,0,73,196635,80,59,131092,85,262187,6,87,1008981770,262187,6,118,1025758986,393260,10,117,118,118,118,262187,6,120,1056964608,393260,10,119,120,120,120,262176,124,2,10,262187,32,131,6,262187,6,140,0,262187,6,159,3211788288,262187,6,161,1065353216,262187,6,163,1078530012,393260,10,217,161,161,161,262187,6,243,1084227584,262187,6,252,1031798784,262187,6,254,1060634624,262187,6,256,1049624576,262187,6,300,1082130432,262187,6,311,953267991,262187,32,317,5,262187,6,335,1022739087,393260,10,334,335,335,335,262176,341,3,7,262203,17,18,1,262203,17,20,1,262203,23,24,1,262203,17,26,1,262203,30,31,9,262203,47,48,2,262203,60,61,0,262203,74,75,0,262203,341,342,3,262187,6,349,1050868098,393260,10,350,349,349,349,327734,1,2,0,3,131320,4,262203,11,12,7,262205,10,16,18,262205,10,19,20,262205,21,22,24,262205,10,25,26,327746,34,35,31,33,262205,29,36,35,327761,28,37,36,0,327745,49,50,48,37,327746,52,53,50,51,327746,54,55,53,33,262205,29,56,55,327761,28,57,56,0,327745,62,63,61,57,327761,28,65,36,0,327745,49,66,48,65,327746,52,67,66,51,327746,54,69,67,68,262205,29,70,69,327761,28,71,70,0,327745,76,77,75,71,262205,73,78,77,262205,59,79,63,327766,80,81,79,78,393303,7,82,81,22,0,327761,6,84,82,3,327866,85,86,84,87,196855,15,0,262394,86,14,13,131320,13,196670,12,25,131321,15,131320,14,327761,28,91,36,0,327745,49,92,48,91,327746,52,93,92,51,327746,54,94,93,33,262205,29,95,94,327761,28,96,95,0,327745,62,97,61,96,327761,28,99,36,0,327745,49,100,48,99,327746,52,101,100,51,327746,54,102,101,68,262205,29,103,102,327761,28,104,103,0,327745,76,105,75,104,262205,73,106,105,262205,59,107,97,327766,80,108,107,106,393303,7,109,108,22,0,524367,10,111,109,109,0,1,2,196670,12,111,131321,15,131320,15,262205,10,114,12,524300,10,115,116,46,117,114,119,393228,10,121,116,69,19,327761,28,122,36,0,327745,49,123,48,122,327746,124,125,123,42,262205,10,126,125,327811,10,127,126,16,393228,10,128,116,69,127,327761,28,129,36,0,327745,49,130,48,129,327746,124,132,130,131,262205,10,133,132,327811,10,134,133,16,393228,10,135,116,69,134,327809,10,136,128,135,393228,10,137,116,69,136,327828,6,138,121,137,458764,6,139,116,40,138,140,327761,28,141,36,0,327745,49,142,48,141,327746,124,143,142,42,262205,10,144,143,327811,10,145,144,16,393228,10,146,116,69,145,327761,28,147,36,0,327745,49,148,48,147,327746,124,149,148,131,262205,10,150,149,327811,10,151,150,16,393228,10,152,116,69,151,327809,10,153,146,152,393228,10,154,116,69,153,327828,6,155,121,154,458764,6,156,116,40,155,140,327813,6,157,139,156,327813,6,158,157,159,327809,6,160,158,161,327813,6,162,163,160,327761,28,164,36,0,327745,49,165,48,164,327746,124,166,165,42,262205,10,167,166,327811,10,168,167,16,393228,10,169,116,69,168,327761,28,170,36,0,327745,49,171,48,170,327746,124,172,171,131,262205,10,173,172,327811,10,174,173,16,393228,10,175,116,69,174,327809,10,176,169,175,393228,10,177,116,69,176,327828,6,178,121,177,458764,6,179,116,40,178,140,327761,28,180,36,0,327745,49,181,48,180,327746,124,182,181,42,262205,10,183,182,327811,10,184,183,16,393228,10,185,116,69,184,327761,28,186,36,0,327745,49,187,48,186,327746,124,188,187,131,262205,10,189,188,327811,10,190,189,16,393228,10,191,116,69,190,327809,10,192,185,191,393228,10,193,116,69,192,327828,6,194,121,193,458764,6,195,116,40,194,140,327813,6,196,179,195,327813,6,197,196,159,327809,6,198,197,161,327813,6,199,162,198,327761,28,200,36,0,327745,49,201,48,200,327746,124,202,201,42,262205,10,203,202,327811,10,204,203,16,393228,10,205,116,69,204,327828,6,206,121,205,458764,6,207,116,40,206,140,327761,28,208,36,0,327745,49,209,48,208,327746,124,210,209,131,262205,10,211,210,327811,10,212,211,16,393228,10,213,116,69,212,327828,6,214,121,213,458764,6,215,116,40,214,140,327811,10,216,217,115,327761,28,218,36,0,327745,49,219,48,218,327746,124,220,219,42,262205,10,221,220,327811,10,222,221,16,393228,10,223,116,69,222,327761,28,224,36,0,327745,49,225,48,224,327746,124,226,225,131,262205,10,227,226,327811,10,228,227,16,393228,10,229,116,69,228,327809,10,230,223,229,393228,10,231,116,69,230,327761,28,232,36,0,327745,49,233,48,232,327746,124,234,233,42,262205,10,235,234,327811,10,236,235,16,393228,10,237,116,69,236,327828,6,238,231,237,524300,6,239,116,43,238,140,161,327811,6,240,161,239,524300,6,241,116,43,240,140,161,458764,6,242,116,26,241,243,327822,10,244,216,242,327809,10,245,115,244,327811,10,246,217,245,327813,10,248,246,114,327813,10,250,248,350,327816,6,251,252,199,327813,6,253,215,254,327809,6,255,253,256,327816,6,257,215,255,327813,6,258,207,254,327809,6,259,258,256,327816,6,260,207,259,327813,6,261,257,260,327813,6,262,251,261,327761,28,263,36,0,327745,49,264,48,263,327746,124,265,264,42,262205,10,266,265,327811,10,267,266,16,393228,10,268,116,69,267,327761,28,269,36,0,327745,49,270,48,269,327746,124,271,270,131,262205,10,272,271,327811,10,273,272,16,393228,10,274,116,69,273,327809,10,275,268,274,393228,10,276,116,69,275,327761,28,277,36,0,327745,49,278,48,277,327746,124,279,278,42,262205,10,280,279,327811,10,281,280,16,393228,10,282,116,69,281,327828,6,283,276,282,524300,6,284,116,43,283,140,161,327811,6,285,161,284,524300,6,286,116,43,285,140,161,458764,6,287,116,26,286,243,327822,10,288,216,287,327809,10,289,115,288,327822,10,290,289,262,327761,28,291,36,0,327745,49,292,48,291,327746,124,293,292,42,262205,10,294,293,327811,10,295,294,16,393228,10,296,116,69,295,327828,6,297,121,296,458764,6,298,116,40,297,140,327813,6,299,300,298,327761,28,301,36,0,327745,49,302,48,301,327746,124,303,302,131,262205,10,304,303,327811,10,305,304,16,393228,10,306,116,69,305,327828,6,307,121,306,458764,6,308,116,40,307,140,327813,6,309,299,308,327809,6,310,309,311,393296,10,312,310,310,310,327816,10,313,290,312,327809,10,314,250,313,327761,28,315,36,0,327745,49,316,48,315,327746,124,318,316,317,262205,10,319,318,327813,10,320,314,319,327761,28,321,36,0,327745,49,322,48,321,327746,124,323,322,131,262205,10,324,323,327811,10,325,324,16,393228,10,326,116,69,325,327828,6,327,121,326,458764,6,328,116,40,327,140,327822,10,329,320,328,327813,10,333,334,114,327809,10,336,333,329,327760,7,337,336,161,196670,342,337,65789,65592,}},{"GLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
#extension GL_EXT_nonuniform_qualifier : require
layout(row_major) uniform;
layout(row_major) buffer;

#line 561 0
struct _MatrixStorage_float4x4_ColMajorstd140_0
{
    vec4  data_0[4];
};


#line 12399
struct _MatrixStorage_float3x3_ColMajorstd140_0
{
    vec3  data_1[3];
};


#line 4 1
struct aggregate_type_0_std140_0
{
    uvec2 texture_0;
    uvec2 sampler_0;
    int a_0;
};


#line 4
struct global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
    aggregate_type_0_std140_0 global_var_7_0;
};


#line 22879 0
struct global_push_constant_struct_std430_0
{
    uvec2 global_ubo_0;
};


#line 31 1
layout(push_constant)
layout(std430) uniform block_global_push_constant_struct_std430_0
{
    uvec2 global_ubo_0;
}global_push_constant_0;

#line 31
layout(binding = 0, set = 1)
uniform sampler  samplerHandles_0[];


#line 31
layout(binding = 0, set = 2)
uniform texture2D  textureHandles_0[];


#line 31
layout(binding = 0, set = 3)
layout(std140) uniform block_global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
    aggregate_type_0_std140_0 global_var_7_0;
}bufferHandles_0[];

#line 12442 0
layout(location = 0)
out vec4 entryPointParam_main_var_32_0;


#line 12442
layout(location = 0)
in vec3 input_var_0_fragPos_0;


#line 12442
layout(location = 1)
in vec3 input_var_0_fragNormal_0;


#line 12442
layout(location = 2)
in vec2 input_var_0_fragTexCoord_0;


#line 12442
layout(location = 3)
in vec3 input_var_0_fragColor_0;


#line 80 1
struct fragment_output_0
{
    vec4 var_32_0;
};


#line 84
void main()
{

#line 85
    fragment_output_0 output_0;

#line 85
    uvec2 _S1 = global_push_constant_0.global_ubo_0;

#line 85
    vec3 var_1_0;

    if(((texture(sampler2D(textureHandles_0[bufferHandles_0[global_push_constant_0.global_ubo_0.x].global_var_7_0.texture_0.x],samplerHandles_0[bufferHandles_0[global_push_constant_0.global_ubo_0.x].global_var_7_0.sampler_0.x]), (input_var_0_fragTexCoord_0))).w) > 0.00999999977648258)
    {

#line 87
        var_1_0 = (texture(sampler2D(textureHandles_0[bufferHandles_0[_S1.x].global_var_7_0.texture_0.x],samplerHandles_0[bufferHandles_0[_S1.x].global_var_7_0.sampler_0.x]), (input_var_0_fragTexCoord_0))).xyz;

#line 87
    }
    else
    {

#line 87
        var_1_0 = input_var_0_fragColor_0;

#line 87
    }

#line 96
    vec3 var_4_0 = mix(vec3(0.03999999910593033, 0.03999999910593033, 0.03999999910593033), var_1_0, vec3(0.5));

#line 104
    vec3 _S2 = normalize(input_var_0_fragNormal_0);
    float var_13_0 = max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0);

#line 110
    float var_18_0 = max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), 0.0);

#line 116
    const vec3 var_24_0 = vec3(1.0, 1.0, 1.0);


    vec3 _S3 = var_24_0 - var_4_0;

#line 125
    output_0.var_32_0 = vec4(vec3(0.02999999932944775, 0.02999999932944775, 0.02999999932944775) * var_1_0 + ((var_24_0 - (var_4_0 + _S3 * pow(clamp(1.0 - clamp(dot(normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0, 1.0), 0.0, 1.0), 5.0))) * var_1_0 / 3.14159297943115234 + 0.0625 / (3.14159297943115234 * (max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * -0.9375 + 1.0) * (max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * -0.9375 + 1.0)) * (var_18_0 / (var_18_0 * 0.71875 + 0.28125) * (var_13_0 / (var_13_0 * 0.71875 + 0.28125))) * (var_4_0 + _S3 * pow(clamp(1.0 - clamp(dot(normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0, 1.0), 0.0, 1.0), 5.0)) / (4.0 * max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0) * max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), 0.0) + 0.00009999999747379)) * bufferHandles_0[_S1.x].global_var_5_0 * max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), 0.0), 1.0);

#line 125
    entryPointParam_main_var_32_0 = output_0.var_32_0;

#line 125
    return;
}

)"},{"HLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"()"},{"Slang_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(struct aggregate_type_0 {
	Texture2D<float4>.Handle texture;
	SamplerState.Handle sampler;
	int a;
}
struct aggregate_type_1 {
	float3 inPosition;
	float3 inNormal;
	float2 inTexCoord;
	float3 inColor;
}
struct aggregate_type_2 {
	float3 fragPos;
	float3 fragNormal;
	float2 fragTexCoord;
	float3 fragColor;
}
struct global_ubo_struct {
	float4x4 global_var_0;
	float3x3 global_var_1;
	float4x4 global_var_2;
	float4x4 global_var_3;
	float3 global_var_4;
	float3 global_var_5;
	float3 global_var_6;
	aggregate_type_0 global_var_7;
}
struct global_push_constant_struct {
	ConstantBuffer<global_ubo_struct>.Handle global_ubo;
}
[[vk::push_constant]] ConstantBuffer<global_push_constant_struct> global_push_constant;
struct parameter_block_struct {
}
ParameterBlock<parameter_block_struct> global_parameter_block;
[vk::binding(0, 1)]
__DynamicResource<__DynamicResourceKind.Sampler> samplerHandles[];

[vk::binding(0, 2)]
__DynamicResource<__DynamicResourceKind.General> textureHandles[];

[vk::binding(0, 3)]
__DynamicResource<__DynamicResourceKind.General> bufferHandles[];

[vk::binding(0, 4)]
__DynamicResource<__DynamicResourceKind.General> combinedTextureSamplerHandles[];

[vk::binding(0, 5)]
__DynamicResource<__DynamicResourceKind.General> accelerationStructureHandles[];

[vk::binding(0, 6)]
__DynamicResource<__DynamicResourceKind.General> texelBufferHandles[];

export T getDescriptorFromHandle<T>(DescriptorHandle<T> handle) where T : IOpaqueDescriptor
{
	__target_switch
	{
		case spirv:
		case glsl:
		if (T.kind == DescriptorKind.Sampler)
			return samplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Texture)
			return textureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Buffer)
			return bufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.CombinedTextureSampler)
			return combinedTextureSamplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.AccelerationStructure)
			return accelerationStructureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.TexelBuffer)
			return texelBufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else
			return defaultGetDescriptorFromHandle(handle);
		default:
		return defaultGetDescriptorFromHandle(handle);
	}
}
struct fragment_input {
	aggregate_type_2 var_0 : LOCATION0;
}
struct fragment_output {
	float4 var_32 : SV_TARGET0;
}
[shader("fragment")]
fragment_output main(fragment_input input) {
	fragment_output output;
	float3 var_1 = float3(0.000000, 0.000000, 0.000000);
	if (((*global_push_constant.global_ubo).global_var_7.texture.Sample((*global_push_constant.global_ubo).global_var_7.sampler,input.var_0.fragTexCoord).w > 0.010000)) {
		var_1 = (*global_push_constant.global_ubo).global_var_7.texture.Sample((*global_push_constant.global_ubo).global_var_7.sampler,input.var_0.fragTexCoord).xyz;
	}
	else {
		var_1 = input.var_0.fragColor;
	}
	float var_2 = 0.500000;
	float var_3 = 0.500000;
	float3 var_4 = float3(0.040000, 0.040000, 0.040000);
	var_4 = lerp(var_4,var_1,var_3);
	float3 var_5 = float3(0.000000, 0.000000, 0.000000);
	float var_6 = 1.000000;
	float var_7 = var_2;
	float var_8 = ((var_7 * var_7) * (var_7 * var_7));
	float var_9 = 1.000000;
	float var_10 = 1.000000;
	float var_11 = 3.141593;
	float var_12 = ((var_11 * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10)) * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10));
	float var_13 = max(dot(normalize(input.var_0.fragNormal),normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos))),0.000000);
	float var_14 = 1.000000;
	float var_15 = 8.000000;
	float var_16 = var_13;
	float var_17 = 1.000000;
	float var_18 = max(dot(normalize(input.var_0.fragNormal),normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))),0.000000);
	float var_19 = 1.000000;
	float var_20 = 8.000000;
	float var_21 = var_18;
	float var_22 = 1.000000;
	float var_23 = 1.000000;
	float3 var_24 = float3(1.000000, 1.000000, 1.000000);
	float var_25 = 4.000000;
	float var_26 = 0.000100;
	float3 var_27 = (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos)))),normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)));
	float3 var_28 = float3(1.000000, 1.000000, 1.000000);
	float var_29 = 1.000000;
	float var_30 = 3.141593;
	var_5 = (var_5 + ((((((var_28 - var_27) * var_1) / var_30) + ((((var_8 / var_12) * ((var_21 / ((var_18 * (var_22 - (((var_2 + var_19) * (var_2 + var_19)) / var_20))) + (((var_2 + var_19) * (var_2 + var_19)) / var_20))) * (var_16 / ((var_13 * (var_17 - (((var_2 + var_14) * (var_2 + var_14)) / var_15))) + (((var_2 + var_14) * (var_2 + var_14)) / var_15))))) * (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos)))),normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)))) / (((var_25 * max(dot(normalize(input.var_0.fragNormal),normalize(((*global_push_constant.global_ubo).global_var_4 - input.var_0.fragPos))),0.000000)) * max(dot(normalize(input.var_0.fragNormal),normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))),0.000000)) + var_26))) * ((*global_push_constant.global_ubo).global_var_5 * var_6)) * max(dot(normalize(input.var_0.fragNormal),normalize(((*global_push_constant.global_ubo).global_var_6 - input.var_0.fragPos))),0.000000)));
	float3 var_31 = float3(0.030000, 0.030000, 0.030000);
	output.var_32 = float4(((var_31 * var_1) + var_5),1.000000);
	return output;
}
)"},{"DXIL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,2000640496,2648123815,2319574787,2123261329,1,5900,7,60,76,232,292,604,2672,2700,810108499,8,100663296,0,826757961,148,4,8,0,136,0,0,3,0,1799,0,0,136,1,0,3,1,1799,0,0,136,2,0,3,2,771,0,0,136,3,0,3,3,1799,0,1094930252,1313818964,0,826757967,52,1,8,0,40,0,64,3,0,15,0,1415534163,1701278305,116,810963792,304,52,0,0,0,0,0,4294967295,0,67109124,1,0,0,0,37,1,24,2,0,0,0,13,0,44,1129270272,1330205761,1330380878,1230258499,1275088463,1413563215,5132105,1094930252,1313818964,1767992576,110,4,0,1,2,3,16,1,0,4390913,515,10,1,4391169,515,19,2,4325889,515,28,3,4391681,515,0,0,272891905,3,7,7,7,0,7,7,7,0,7,7,0,0,1,2,4,0,1413567571,2060,102,515,1279875140,262,16,2036,3737142082,3105,506,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,77,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146910224,167774528,149291110,9330880,272680489,1368408388,2283831308,2323914850,2680915579,4237330352,2240178192,1194492224,560108560,3869345288,670228904,2669945324,627222747,1840824102,818089028,371319316,2258870402,2276499403,2741927056,2090374538,1091679972,139527184,2584238217,2133727854,4064419522,2304393815,460206025,204522261,1646944580,409044569,3357049352,205572138,51130563,2283300193,205698177,1997549764,335114459,3214020854,1162056210,3460731138,1108558915,2283817032,3804507202,1892710353,284562425,3524444050,570635398,1244168712,3240169649,806369424,1192239244,1360318982,2333861058,4291493907,200397392,1078797134,349371699,3556033105,852437032,2516592406,3819217407,2588318743,1778017920,1718917140,4665604,10,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,2148131888,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,64,0,136200960,98312,0,1015414784,50335763,0,201326592,2108537,6,0,1080095256,1024,0,3521392640,524416,0,3361734656,268501443,0,3221225472,33810320,32,0,412033408,1048832,0,373293056,8,21,412622386,2420904217,1193675148,574817478,1176019018,211945984,1242866122,2747926691,1502217164,2164927648,18387594,674398760,3038790288,285278464,27060273,2147906592,2275586514,939757112,238551950,2181302272,6604,6265,154,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,876642918,2558624795,114167840,3223859393,270036429,2686490754,986716289,185826147,2877487971,452674459,2744873851,4221793035,270571906,1355024079,404275990,1825588064,29360160,1080428582,3637404678,3636643038,3737447102,136732862,541144068,553781666,1770524749,458244226,2358387216,229419657,273511170,906764494,421708816,3678798875,2517637200,17044333,409731288,282840844,2709920636,1107919619,2260831258,3024620608,297379205,169507425,1920617122,3658752154,920166660,2701444612,1158162144,2794471863,106007309,1745252454,444794512,112224024,3277947419,427922482,2753249692,3271991489,2260839449,1210112704,717588178,2201498371,562251831,2150870029,3028356483,3234500961,239128076,55599314,1624640745,1845936387,3228763920,2347420260,2901298218,1350725260,3800306552,3574603931,2210545926,122784525,1745313894,499320432,126904088,3627876891,516018224,889459456,2181923584,2317027281,3774352526,1646396401,1668178290,879977832,3269384396,136767208,3441608068,1852739181,878461058,3201225446,136759512,778257924,2389437677,1681949294,4039829572,3839810750,2687514330,679642160,2485715596,43788674,1354933290,2932706693,2894931405,1248759244,3273741328,2469114227,1937460123,1292898971,3965513928,3404519618,1174709988,2537304605,2989536313,933673266,699806386,210129409,1823360463,1850650094,1248750764,3273807072,2211160435,1936853803,2735448955,2608036683,1617699483,3473704784,3970772677,2322368814,1823378478,1963335754,3395088584,4075088092,3704807072,78046952,210096254,2917950927,1286507982,2420797038,10,6265,81,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,2172858608,3693019592,2716081216,492945948,3827056860,1,8305,51,2534228134,3493739759,1275383348,3274967108,872568898,4176723548,285266433,1840715750,4184922884,17556430,1413747797,307281978,2120228870,2958482289,1022334733,1162875070,61162561,6366476,3072583170,1893534573,199479033,1145831697,1120089096,1824756092,2367697736,1893335905,199479033,1145831697,1120089096,2227409276,2178478084,4089338931,3711140856,383480190,4019653936,14876220,3560757379,1840715748,4184920070,4973518,1602497779,1409922780,2403067331,1145982255,1358222496,3067895699,3854777377,894406459,3321463872,3238009709,215040,0,1213415752,20,0,755251113,1254616708,2811672047,3643904678,1279875140,3192,102,798,1279875140,262,16,3168,3737142082,3105,789,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,77,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146911248,167774528,149291110,9330880,272680489,1368408388,2283831308,2323914850,2680915579,4237330352,2240178192,1194492224,560108560,3869345288,670228904,2669945324,627222747,1840824102,818089028,371319316,2258870402,2276499403,2741927056,2090374538,1091679972,139527184,2584238217,2133727854,4064419522,2304393815,460206025,204522261,1646944580,409044569,3357049352,205572138,51130563,2283300193,205698177,1997549764,335114459,3214020854,1162056210,3460731138,1108558915,2283817032,3804507202,1892710353,284562425,3524444050,570635398,1244168712,3240169649,806369424,1192239244,1360318982,2333861058,4291493907,200397392,1078797134,349371699,3556033105,852437032,2516592406,3819217407,2588318743,1778017920,1718917140,4665604,21258,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,648240,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,64,0,136200960,98312,0,1015414784,50335763,0,201326592,2108537,6,0,1080095256,1024,0,3521392640,524416,0,3361734656,268501443,0,3221225472,33810320,32,0,412033408,1048832,0,373293056,8,17,345513522,2420904217,1193675148,574817478,1243127882,547357794,2317131978,682114208,578818441,688030504,269177348,2198933520,2275586514,939757112,238551950,2181302272,6608,6265,96,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,876642918,2558624795,114167840,3223859297,270036429,270571650,218170575,68354618,679533058,1126736651,2617797635,1006633997,220267712,876678584,301994049,1852399981,2258540612,2660411522,1158162076,2888319285,1093828877,1107930664,2282769793,1212187240,3683484699,1972709552,698407265,404862807,1698901046,1748393821,273536451,272853384,1837374214,1099215067,2422365541,1545099533,3626086499,1700473910,227566941,460682970,3356233480,1285033152,2236710233,3516243401,1820987469,325603458,551191044,1638951788,1254150225,3558534147,1624815936,453431363,57684870,111182432,2168522459,1153764739,118751677,3973634133,3369229530,2800278730,840253700,851121980,934590905,3506514359,3318680708,2932706350,1615490636,1942168020,587940761,2053870379,2606967587,3362070546,3403963632,3840597734,2800143046,840781572,3032160060,2988751794,3123755561,1413556658,2781809799,776900044,3442338319,1248751245,1808,6265,81,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,2172858608,3693019592,2716081216,492945948,3827056860,1,8305,51,2534228134,3493739759,1275383348,3274967108,872568898,4176723548,285266433,1840715750,4184922884,17556430,1413747797,307281978,2120228870,2958482289,1022334733,1162875070,61162561,6366476,3072583170,1893534573,199479033,1145831697,1120089096,1824756092,2367697736,1893335905,199479033,1145831697,1120089096,2227409276,2178478084,4089338931,3711140856,383480190,4019653936,14876220,3560757379,1840715748,4184920070,4973518,1602497779,1409922780,2403067331,1145982255,1358222496,3067895699,3854777377,894406459,3321463872,3238009709,215040,8289,343,742589459,16,48,146855108,1076172032,1251246404,3779630265,1112098581,329337108,557902996,248596117,348734100,1074577644,3646657569,1661800853,2396927748,4601645,2189959298,134289601,2381193346,136347665,1177575594,2015396352,3154404223,405064255,4143452556,811634575,4125270086,73628201,3917613088,2181056055,1669282848,2936876804,541472687,2125037234,1579811939,1178055327,136348160,704930687,800235358,294387916,3792183424,415238367,3955444673,2268566013,483395264,3248757506,108315164,4033218675,4043782224,380732,525859,102785154,3238412451,2294397983,545259969,4037377048,1099482629,404783106,4259360536,3253217345,9462327,101058592,547388460,100692234,591395,3294650498,3263436802,406973480,2365580,562135560,167797003,1644679332,9462320,3322284064,675383340,2350711444,37849281,404234368,2835755188,1082067552,151397126,1616937472,2820211412,1104685506,605588505,2172782592,2959412065,167815178,2422354022,101195776,1100492230,679650346,1099481500,404783106,108050456,2030739626,102958720,1619132425,436397152,2351612588,411834946,2181562396,1728799937,1757589696,411828290,2181562400,1879810881,528611344,1841292,1203864072,1343254027,460323,3912261762,1996757698,1088048,525859,4174405762,2718178562,102959648,1619132423,478339568,40425220,538479649,1099040768,276237843,2351514264,134224920,196592002,593760373,2181041926,1132552288,616632360,3692577157,1104424386,69635096,2957275331,3409428998,1757480976,646709442,1114161424,135449633,293803267,1345323488,503388209,2199192320,1610735633,3351255747,2407544326,520121613,1044438555,2088878134,4177758316,4027003096,3759047089,3223143267,23118951,2953580608,830810232,405832464,2198352131,197393,3805294657,184685889,641614026,1820098964,2365129512,134224920,261357954,3282432169,2348827240,1757480998,2430083266,565309702,1130619405,3295134746,272630112,2290003980,101204357,808523809,50597888,560734125,2408587952,2893840917,1647567896,136314992,3561574406,3281263298,2348827240,1757480998,1356341442,2712793351,1130619406,3295134749,272630112,3902058508,101204357,808523809,50597888,566502701,2408587952,2893840917,3278103576,505093891,3237009656,23118951,2953580608,1099376792,404817416,268447793,640484100,581968340,2182451088,3826822268,11559475,2550532128,415475789,202916232,1885483074,101195776,1134841180,68553584,478196210,283534308,1107871684,2208568894,2182597756,3359660280,23118951,2953580608,906467487,3474264,823906179,68157496,3827813891,294060065,1090520451,2730672176,228645918,2829762776,230161,3235917889,1895964290,2210427184,3761821944,478968897,591274224,2181040902,2241429600,1951550526,105932294,460323,2512412802,3875814981,7365168,2617640992,2420412505,1091479054,235685500,2160133120,142478147,3770966484,202391552,2302194872,205921664,3238264844,2550881088,131607560,404262137,2172782592,288560854,3351822424,910050820,2024927792,1492682040,3871851584,1675760897,2870939969,2408076423,1820083717,1044511766,837949462,4178116698,3351797848,3827581290,522289507,2687502699,556234127,38931231,4094031422,156250417,314595577,137507312,566518760,4177791775,4032835160,3770703025,3246438755,1044514503,2985432118,3046084801,3351793473,2408592898,520183813,2566521395,2361905185,1748385409,2200023536,2081951119,920646,3389047044,133739661,139270334,553963904,68701464,3640200731,2261239920,260456003,3273597284,2408624775,3361309665,2420051143,545200527,1094726431,4028118590,2407580081,1182533133,67113484,2404974785,3742232767,3294727608,272630048,4176842764,2381373195,205918422,3238264850,3213842688,2967408112,549740685,202391553,200865168,3666735327,265016,0,}},
};