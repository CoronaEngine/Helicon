#include"HardcodeShaders.h"
std::unordered_map<std::string, std::variant<EmbeddedShader::ShaderCodeModule::ShaderResources,std::variant<std::vector<uint32_t>,std::string>>> EmbeddedShader::HardcodeShaders::hardcodeShadersFragmentShader = {{"Reflection_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{0,"",{{"global_ubo_struct_std140",{0,0,0,"global_ubo_struct_std140","uniform",7,284,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(3)}},{"global_ubo.global_var_7.texture",{0,1,0,"global_ubo.global_var_7.texture","sampler2D",0,0,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(4)}},{"input.var_0.fragPos",{0,0,0,"input.var_0.fragPos","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragNormal",{0,0,1,"input.var_0.fragNormal","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"entryPointParam_main.var_32",{0,0,0,"entryPointParam_main.var_32","float",4,16,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(2)}},{"input.var_0.fragTexCoord",{0,0,2,"input.var_0.fragTexCoord","float",2,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragColor",{0,0,3,"input.var_0.fragColor","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},}}},{"SpirV_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,204,0,131089,1,393227,49,1280527431,1685353262,808793134,0,196622,0,1,786447,4,2,1852399981,0,64,31,195,18,20,24,26,196624,2,7,196611,11,1,262149,12,1601331574,49,262149,12,1601331574,49,458757,18,1970302569,1635135092,774922098,1734439526,7565136,524293,20,1970302569,1635135092,774922098,1734439526,1836216142,27745,589829,24,1970302569,1635135092,774922098,1734439526,1131963732,1685221231,0,524293,26,1970302569,1635135092,774922098,1734439526,1869377347,114,655365,31,1651469415,1969187937,1731096418,1633841004,1635147628,775380850,1954047348,6648437,262149,32,1886216563,6579564,262149,42,1886216563,6579564,786437,56,1952533855,1400400242,1634889588,1717527911,1952542572,1597274164,1298952003,1919904353,828666995,12340,327686,56,0,1635017060,0,786437,60,1952533855,1400400242,1634889588,1717527911,1952542572,1597208627,1298952003,1919904353,828666995,12340,327686,60,0,1635017060,0,589829,55,1651469415,1969187937,1935634274,1668641396,1953718132,808726884,0,458758,55,0,1651469415,1985965153,811561569,0,458758,55,1,1651469415,1985965153,828338785,0,458758,55,2,1651469415,1985965153,845116001,0,458758,55,3,1651469415,1985965153,861893217,0,458758,55,4,1651469415,1985965153,878670433,0,458758,55,5,1651469415,1985965153,895447649,0,458758,55,6,1651469415,1985965153,912224865,0,327685,64,1651469415,1969187937,28514,262149,108,1601331574,12849,262149,129,1601331574,14130,589829,195,1920233061,1768902777,1632662638,1601003890,1852399981,1918989870,3289951,262149,2,1852399981,0,262215,18,30,0,262215,20,30,1,262215,24,30,2,262215,26,30,3,262215,31,33,1,262215,31,34,0,262215,57,6,16,327752,56,0,35,0,262215,61,6,16,327752,60,0,35,0,196679,55,2,327752,55,0,35,0,327752,55,1,35,64,327752,55,2,35,112,327752,55,3,35,176,327752,55,4,35,240,327752,55,5,35,256,327752,55,6,35,272,262215,64,33,0,262215,64,34,0,262215,195,30,0,131091,1,196641,3,1,196630,6,32,262167,7,6,4,262167,10,6,3,262176,11,7,10,262176,17,1,10,262167,21,6,2,262176,23,1,21,589849,27,6,1,2,0,0,1,0,196635,28,27,262176,30,0,28,131092,35,262187,6,37,1008981770,262187,6,51,1025758986,393260,10,50,51,51,51,262187,6,53,1056964608,393260,10,52,53,53,53,262165,58,32,1,262187,58,59,4,262172,57,7,59,196638,56,57,262187,58,62,3,262172,61,10,62,196638,60,61,589854,55,56,60,56,56,10,10,10,262176,63,2,55,262176,65,2,10,262187,58,70,6,262187,6,79,0,262187,6,88,3211788288,262187,6,90,1065353216,262187,6,92,1078530012,393260,10,116,90,90,90,262187,6,127,1084227584,262187,6,136,1031798784,262187,6,138,1060634624,262187,6,140,1049624576,262187,6,164,1082130432,262187,6,170,953267991,262187,58,174,5,262187,6,188,1022739087,393260,10,187,188,188,188,262176,194,3,7,262203,17,18,1,262203,17,20,1,262203,23,24,1,262203,17,26,1,262203,30,31,0,262203,63,64,2,262203,194,195,3,262187,6,202,1050868098,393260,10,203,202,202,202,327734,1,2,0,3,131320,4,262203,11,12,7,262205,10,16,18,262205,10,19,20,262205,21,22,24,262205,10,25,26,262205,28,29,31,393303,7,32,29,22,0,327761,6,34,32,3,327866,35,36,34,37,196855,15,0,262394,36,14,13,131320,13,196670,12,25,131321,15,131320,14,262205,28,41,31,393303,7,42,41,22,0,524367,10,44,42,42,0,1,2,196670,12,44,131321,15,131320,15,262205,10,47,12,524300,10,48,49,46,50,47,52,393228,10,54,49,69,19,327746,65,66,64,59,262205,10,67,66,327811,10,68,67,16,393228,10,69,49,69,68,327746,65,71,64,70,262205,10,72,71,327811,10,73,72,16,393228,10,74,49,69,73,327809,10,75,69,74,393228,10,76,49,69,75,327828,6,77,54,76,458764,6,78,49,40,77,79,393228,10,80,49,69,68,393228,10,81,49,69,73,327809,10,82,80,81,393228,10,83,49,69,82,327828,6,84,54,83,458764,6,85,49,40,84,79,327813,6,86,78,85,327813,6,87,86,88,327809,6,89,87,90,327813,6,91,92,89,393228,10,93,49,69,68,393228,10,94,49,69,73,327809,10,95,93,94,393228,10,96,49,69,95,327828,6,97,54,96,458764,6,98,49,40,97,79,393228,10,99,49,69,68,393228,10,100,49,69,73,327809,10,101,99,100,393228,10,102,49,69,101,327828,6,103,54,102,458764,6,104,49,40,103,79,327813,6,105,98,104,327813,6,106,105,88,327809,6,107,106,90,327813,6,108,91,107,393228,10,109,49,69,68,327828,6,110,54,109,458764,6,111,49,40,110,79,393228,10,112,49,69,73,327828,6,113,54,112,458764,6,114,49,40,113,79,327811,10,115,116,48,393228,10,117,49,69,68,393228,10,118,49,69,73,327809,10,119,117,118,393228,10,120,49,69,119,393228,10,121,49,69,68,327828,6,122,120,121,524300,6,123,49,43,122,79,90,327811,6,124,90,123,524300,6,125,49,43,124,79,90,458764,6,126,49,26,125,127,327822,10,128,115,126,327809,10,129,48,128,327811,10,130,116,129,327813,10,132,130,47,327813,10,134,132,203,327816,6,135,136,108,327813,6,137,114,138,327809,6,139,137,140,327816,6,141,114,139,327813,6,142,111,138,327809,6,143,142,140,327816,6,144,111,143,327813,6,145,141,144,327813,6,146,135,145,393228,10,147,49,69,68,393228,10,148,49,69,73,327809,10,149,147,148,393228,10,150,49,69,149,393228,10,151,49,69,68,327828,6,152,150,151,524300,6,153,49,43,152,79,90,327811,6,154,90,153,524300,6,155,49,43,154,79,90,458764,6,156,49,26,155,127,327822,10,157,115,156,327809,10,158,48,157,327822,10,159,158,146,393228,10,160,49,69,68,327828,6,161,54,160,458764,6,162,49,40,161,79,327813,6,163,164,162,393228,10,165,49,69,73,327828,6,166,54,165,458764,6,167,49,40,166,79,327813,6,168,163,167,327809,6,169,168,170,393296,10,171,169,169,169,327816,10,172,159,171,327809,10,173,134,172,327746,65,175,64,174,262205,10,176,175,327813,10,177,173,176,393228,10,178,49,69,73,327828,6,179,54,178,458764,6,180,49,40,179,79,327822,10,181,177,180,327813,10,186,187,47,327809,10,189,186,181,327760,7,190,189,90,196670,195,190,65789,65592,}},{"GLSL_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
layout(row_major) uniform;
layout(row_major) buffer;

#line 561 0
struct _MatrixStorage_float4x4_ColMajorstd140_0
{
    vec4  data_0[4];
};


#line 12399
struct _MatrixStorage_float3x3_ColMajorstd140_0
{
    vec3  data_1[3];
};


#line 23 1
struct global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
};


#line 2
layout(binding = 0)
layout(std140) uniform block_global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
}global_ubo_0;

#line 970 0
layout(binding = 1)
uniform sampler2D global_ubo_global_var_7_texture_0;


#line 12442
layout(location = 0)
out vec4 entryPointParam_main_var_32_0;


#line 12442
layout(location = 0)
in vec3 input_var_0_fragPos_0;


#line 12442
layout(location = 1)
in vec3 input_var_0_fragNormal_0;


#line 12442
layout(location = 2)
in vec2 input_var_0_fragTexCoord_0;


#line 12442
layout(location = 3)
in vec3 input_var_0_fragColor_0;


#line 71 1
struct fragment_output_0
{
    vec4 var_32_0;
};


#line 75
void main()
{

#line 76
    fragment_output_0 output_0;

    vec4 _S1 = (texture((global_ubo_global_var_7_texture_0), (input_var_0_fragTexCoord_0)));

#line 78
    vec3 var_1_0;

#line 78
    if((_S1.w) > 0.00999999977648258)
    {

#line 78
        var_1_0 = _S1.xyz;

#line 78
    }
    else
    {

#line 78
        var_1_0 = input_var_0_fragColor_0;

#line 78
    }

#line 87
    vec3 var_4_0 = mix(vec3(0.03999999910593033, 0.03999999910593033, 0.03999999910593033), var_1_0, vec3(0.5));

#line 95
    vec3 _S2 = normalize(input_var_0_fragNormal_0);

#line 95
    vec3 _S3 = normalize(global_ubo_0.global_var_4_0 - input_var_0_fragPos_0);

#line 95
    vec3 _S4 = normalize(global_ubo_0.global_var_6_0 - input_var_0_fragPos_0);

#line 95
    vec3 _S5 = normalize(_S3 + _S4);

#line 95
    float _S6 = max(dot(_S2, _S5), 0.0);

#line 95
    float _S7 = _S6 * _S6 * -0.9375 + 1.0;
    float var_13_0 = max(dot(_S2, _S3), 0.0);

#line 101
    float var_18_0 = max(dot(_S2, _S4), 0.0);

#line 107
    const vec3 var_24_0 = vec3(1.0, 1.0, 1.0);


    vec3 var_27_0 = var_4_0 + (var_24_0 - var_4_0) * pow(clamp(1.0 - clamp(dot(_S5, _S3), 0.0, 1.0), 0.0, 1.0), 5.0);

#line 116
    output_0.var_32_0 = vec4(vec3(0.02999999932944775, 0.02999999932944775, 0.02999999932944775) * var_1_0 + ((var_24_0 - var_27_0) * var_1_0 / 3.14159297943115234 + 0.0625 / (3.14159297943115234 * _S7 * _S7) * (var_18_0 / (var_18_0 * 0.71875 + 0.28125) * (var_13_0 / (var_13_0 * 0.71875 + 0.28125))) * var_27_0 / (4.0 * var_13_0 * var_18_0 + 0.00009999999747379)) * global_ubo_0.global_var_5_0 * var_18_0, 1.0);

#line 116
    entryPointParam_main_var_32_0 = output_0.var_32_0;

#line 116
    return;
}

)"},{"HLSL_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"()"},{"Slang_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(struct aggregate_type_0 {
	Sampler2D<float4> texture;
}
struct aggregate_type_1 {
	float3 inPosition;
	float3 inNormal;
	float2 inTexCoord;
	float3 inColor;
}
struct aggregate_type_2 {
	float3 fragPos;
	float3 fragNormal;
	float2 fragTexCoord;
	float3 fragColor;
}
struct global_ubo_struct {
	float4x4 global_var_0;
	float3x3 global_var_1;
	float4x4 global_var_2;
	float4x4 global_var_3;
	float3 global_var_4;
	float3 global_var_5;
	float3 global_var_6;
	aggregate_type_0 global_var_7;
}
ConstantBuffer<global_ubo_struct> global_ubo;
[vk::binding(0, 1)]
__DynamicResource<__DynamicResourceKind.Sampler> samplerHandles[];

[vk::binding(0, 2)]
__DynamicResource<__DynamicResourceKind.General> textureHandles[];

[vk::binding(0, 3)]
__DynamicResource<__DynamicResourceKind.General> bufferHandles[];

[vk::binding(0, 4)]
__DynamicResource<__DynamicResourceKind.General> combinedTextureSamplerHandles[];

[vk::binding(0, 5)]
__DynamicResource<__DynamicResourceKind.General> accelerationStructureHandles[];

[vk::binding(0, 6)]
__DynamicResource<__DynamicResourceKind.General> texelBufferHandles[];

export T getDescriptorFromHandle<T>(DescriptorHandle<T> handle) where T : IOpaqueDescriptor
{
	__target_switch
	{
		case spirv:
		case glsl:
		if (T.kind == DescriptorKind.Sampler)
			return samplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Texture)
			return textureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Buffer)
			return bufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.CombinedTextureSampler)
			return combinedTextureSamplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.AccelerationStructure)
			return accelerationStructureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.TexelBuffer)
			return texelBufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else
			return defaultGetDescriptorFromHandle(handle);
		default:
		return defaultGetDescriptorFromHandle(handle);
	}
}struct fragment_input {
	aggregate_type_2 var_0 : LOCATION0;
}
struct fragment_output {
	float4 var_32 : SV_TARGET0;
}
[shader("fragment")]
fragment_output main(fragment_input input) {
	fragment_output output;
	float3 var_1 = float3(0.000000, 0.000000, 0.000000);
	if ((global_ubo.global_var_7.texture.Sample(input.var_0.fragTexCoord).w > 0.010000)) {
		var_1 = global_ubo.global_var_7.texture.Sample(input.var_0.fragTexCoord).xyz;
	}
	else {
		var_1 = input.var_0.fragColor;
	}
	float var_2 = 0.500000;
	float var_3 = 0.500000;
	float3 var_4 = float3(0.040000, 0.040000, 0.040000);
	var_4 = lerp(var_4,var_1,var_3);
	float3 var_5 = float3(0.000000, 0.000000, 0.000000);
	float var_6 = 1.000000;
	float var_7 = var_2;
	float var_8 = ((var_7 * var_7) * (var_7 * var_7));
	float var_9 = 1.000000;
	float var_10 = 1.000000;
	float var_11 = 3.141593;
	float var_12 = ((var_11 * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10)) * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize((global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_ubo.global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10));
	float var_13 = max(dot(normalize(input.var_0.fragNormal),normalize((global_ubo.global_var_4 - input.var_0.fragPos))),0.000000);
	float var_14 = 1.000000;
	float var_15 = 8.000000;
	float var_16 = var_13;
	float var_17 = 1.000000;
	float var_18 = max(dot(normalize(input.var_0.fragNormal),normalize((global_ubo.global_var_6 - input.var_0.fragPos))),0.000000);
	float var_19 = 1.000000;
	float var_20 = 8.000000;
	float var_21 = var_18;
	float var_22 = 1.000000;
	float var_23 = 1.000000;
	float3 var_24 = float3(1.000000, 1.000000, 1.000000);
	float var_25 = 4.000000;
	float var_26 = 0.000100;
	float3 var_27 = (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize((global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_ubo.global_var_6 - input.var_0.fragPos)))),normalize((global_ubo.global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)));
	float3 var_28 = float3(1.000000, 1.000000, 1.000000);
	float var_29 = 1.000000;
	float var_30 = 3.141593;
	var_5 = (var_5 + ((((((var_28 - var_27) * var_1) / var_30) + ((((var_8 / var_12) * ((var_21 / ((var_18 * (var_22 - (((var_2 + var_19) * (var_2 + var_19)) / var_20))) + (((var_2 + var_19) * (var_2 + var_19)) / var_20))) * (var_16 / ((var_13 * (var_17 - (((var_2 + var_14) * (var_2 + var_14)) / var_15))) + (((var_2 + var_14) * (var_2 + var_14)) / var_15))))) * (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize((global_ubo.global_var_4 - input.var_0.fragPos)) + normalize((global_ubo.global_var_6 - input.var_0.fragPos)))),normalize((global_ubo.global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)))) / (((var_25 * max(dot(normalize(input.var_0.fragNormal),normalize((global_ubo.global_var_4 - input.var_0.fragPos))),0.000000)) * max(dot(normalize(input.var_0.fragNormal),normalize((global_ubo.global_var_6 - input.var_0.fragPos))),0.000000)) + var_26))) * (global_ubo.global_var_5 * var_6)) * max(dot(normalize(input.var_0.fragNormal),normalize((global_ubo.global_var_6 - input.var_0.fragPos))),0.000000)));
	float3 var_31 = float3(0.030000, 0.030000, 0.030000);
	output.var_32 = float4(((var_31 * var_1) + var_5),1.000000);
	return output;
}
)"},{"DXIL_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,1384921035,1546784815,128944238,81136455,1,6368,7,60,76,232,292,652,3108,3136,810108499,8,0,0,826757961,148,4,8,0,136,0,0,3,0,1799,0,0,136,1,0,3,1,1799,0,0,136,2,0,3,2,771,0,0,136,3,0,3,3,1799,0,1094930252,1313818964,0,826757967,52,1,8,0,40,0,64,3,0,15,0,1415534163,1701278305,116,810963792,352,52,0,0,0,0,0,4294967295,0,67109124,1,0,0,0,37,3,24,2,0,0,0,13,0,1,0,0,0,14,0,3,0,0,0,2,0,44,1129270272,1330205761,1330380878,1230258499,1275088463,1413563215,5132105,1094930252,1313818964,1767992576,110,4,0,1,2,3,16,1,0,4390913,515,10,1,4391169,515,19,2,4325889,515,28,3,4391681,515,0,0,272891905,3,7,7,7,0,7,7,7,0,7,7,0,0,1,2,4,0,1413567571,2448,102,612,1279875140,262,16,2424,3737142082,3105,603,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,115,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146915344,167774528,149291110,9330880,272680489,1368408388,2283831308,2799968354,3962041057,629089313,4237858212,827438818,1346421516,4184919921,2450585107,2966225439,173549584,856428707,272679692,1095581892,2249744902,703076449,336347331,2250269205,2258871937,2276499403,2741927056,4237858186,823244514,2286994188,2986893450,2133728110,4064419522,2826060375,3369214024,1114146937,67701000,1619396689,437176880,516063022,1113059906,1080463578,3306176772,173031708,2382944390,1635811770,2845336068,495044109,3860750786,2707951041,511832092,3390980586,2168983105,480373775,3726541254,3237486145,501340188,3625877954,3236432896,264290319,3658432756,1642077473,511802910,3390964210,1287914753,3960352866,821235216,188771855,4094656741,1358040912,171995662,3842990204,4042526256,130085390,4010721510,3237219856,121659398,2114322558,607126656,3015706929,613418372,145097119,1902312633,2110245248,820249884,2162438338,11572857,3224626322,1603739924,4180676140,3768811447,580537660,1669109834,4183818865,2784608425,3917783593,2723271079,3868879205,81970737,2169762496,1210635251,2588523849,2090355234,2241749014,2550782088,3289388040,1194394726,2560,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,2148131888,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,192,0,127812352,32776,0,1015414784,16781329,0,201326592,2107001,2,0,1079570968,3072,0,3387174912,524416,0,3361734656,268501459,0,1073741824,2070,27,412622386,2420904217,1193675148,574817478,1176019018,614500864,278959882,169648330,62955568,3231734794,10701319,2694056457,2688338492,2194277748,18387594,674398760,3080733328,285278464,536976680,3598714485,1735000089,723372032,954435706,2151211904,1082130659,27027488,0,6265,230,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,742425189,2558624795,114036768,3223859393,270036429,2350946434,221256321,3302938830,3938375874,3468615364,3267682008,3270295256,3194928868,3908094696,3200967914,3908094696,3200967914,1141384800,2619359539,1825669645,828705864,2620490124,1093910797,540246872,653706867,1442235926,100070951,2652913971,1225885709,3226218886,546996358,807010740,3738750477,3201876676,3202270442,3302938830,3971930306,1858004162,4039829694,3403999976,3670206142,3838499040,540434622,3323557254,35324000,16843628,1212233301,1939878531,371652294,392558278,4077254438,541143813,3611495840,570692401,3524272282,417367046,2696950767,4140200865,4140176934,4146468709,3003511573,1715402849,457982082,2550940176,13170737,1731861004,1633841004,1635147628,1597136754,2181305136,1712357594,434075840,3879944576,743304588,785116556,3865833036,1082287627,571480916,1408178189,3899142147,2310910364,3648893317,3514681733,273465724,1082288904,2182093660,3587597,1041090179,1869375290,1600938338,1601331574,321937205,2161836548,3320868880,1848907777,1664733680,1661670267,2467017467,2197402363,3641712793,2207810566,2696941199,57639793,423724338,3155870112,3251903617,3423420676,1212220256,2554442143,1631805680,124810860,272707705,2260733312,1040441537,3253997784,64512390,3089143871,141302337,1531216192,287021656,547465126,2804393130,1306608137,1131383312,168840288,337680432,4165054561,1656971456,2485715596,3265014146,692456064,1619444388,2735517912,2963606080,2687543050,2836025538,912269744,1639440136,344016481,1310040394,2785359969,1130454036,3193466352,1384456273,408126848,2234245456,2822821972,1119628034,2996383788,2466947834,2611161915,811734048,1623599169,459817090,907464580,2418853420,1117269250,1622477865,1814938260,3277942792,12127008,2162036812,3322426892,4129844270,1098126400,1712981475,1952542572,1644434291,921080163,1094137671,1931098144,1818191721,2718176100,1989620131,1195849206,4010585732,2924342731,199394157,3775791295,1088622112,205085966,3973634133,3369229530,2800278730,840253700,851121980,934590905,3506514359,3318680708,2932706350,1615490636,1942168020,587940761,2053870379,2606967587,3362070546,3403963632,3840597734,2800143046,841308420,1018828604,924889784,817510327,3073881274,507652537,840778232,3032160060,2988751794,3123755561,671164850,1942168020,2476962601,1266320331,2610668403,390262802,2979478578,3124181687,700037426,14657,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228102,3493739759,1275383348,3274967108,872519746,4176723548,285266433,1840715750,4184922887,17556430,1413747797,307281978,2120228870,3499547505,1022334733,3222343870,859866180,957858860,53774028,3762690258,1022334732,3075268862,95870047,1004913484,3224944527,890189344,3681404409,3193713664,3222468851,400624444,3573706167,3821992304,286495563,3560781096,1840715748,4184919813,223601614,1904107792,809502427,53760,0,1213415752,20,0,3974572209,629837054,2324597863,587688640,1279875140,3224,102,806,1279875140,262,16,3200,3737142082,3105,797,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,115,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146915344,167774528,149291110,9330880,272680489,1368408388,2283831308,2799968354,3962041057,629089313,4237858212,827438818,1346421516,4184919921,2450585107,2966225439,173549584,856428707,272679692,1095581892,2249744902,703076449,336347331,2250269205,2258871937,2276499403,2741927056,4237858186,823244514,2286994188,2986893450,2133728110,4064419522,2826060375,3369214024,1114146937,67701000,1619396689,437176880,516063022,1113059906,1080463578,3306176772,173031708,2382944390,1635811770,2845336068,495044109,3860750786,2707951041,511832092,3390980586,2168983105,480373775,3726541254,3237486145,501340188,3625877954,3236432896,264290319,3658432756,1642077473,511802910,3390964210,1287914753,3960352866,821235216,188771855,4094656741,1358040912,171995662,3842990204,4042526256,130085390,4010721510,3237219856,121659398,2114322558,607126656,3015706929,613418372,145097119,1902312633,2110245248,820249884,2162438338,11572857,3224626322,1603739924,4180676140,3768811447,580537660,1669109834,4183818865,2784608425,3917783593,2723271079,3868879205,81970737,2169762496,1210635251,2588523849,2090355234,2241749014,2550782088,3289388040,1194394726,2560,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,648240,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,192,0,127812352,32776,0,1015414784,16781329,0,201326592,2107001,2,0,1079570968,3072,0,3387174912,524416,0,3361734656,268501459,0,1073741824,2070,19,345513522,2420904217,1193675148,574817478,1243127882,144704610,211851018,2822545866,2148632872,42149922,192545833,2165313552,1778391510,499646567,3817372203,954433592,2147541888,2624069696,1,6265,108,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,742425189,2558624795,114036768,3223859297,270036429,270571650,207684813,68354618,673241538,1497663174,437863704,1007737285,3493168147,3015968806,1176654081,3624470097,2215857168,540465206,3391669578,35324064,16843627,1883321812,2420338179,2147749965,2589481796,2812678427,2762612897,1107928871,168840497,1285571434,2188020240,68376656,270572034,207685329,2730713288,101178996,2173186145,2260833778,212916320,1100871581,811731992,565208444,1661482600,2518353456,884929446,203522824,906842010,1638949636,4224615193,101458136,2944604209,1712338444,3496674944,2896579590,3837962430,652790478,1094042888,34189352,3322965281,741740096,1886919626,283051520,121096711,3627680283,490846256,931402496,3389535944,908618781,1009782478,1724301992,1184032471,927393366,2427062309,2514008545,3181759945,2282311097,779641894,1986814326,39023205,2652442275,408558795,3546061145,3675871515,1126760596,1461905286,660010806,926307895,2431301669,2782444001,2435177877,3515208013,2986954133,779641914,1920233061,1768902777,1400075374,15362,6265,76,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,240,8305,40,2534228102,3493739759,1275383348,3274967108,872519746,4176723548,285266433,1840715750,4184922887,17556430,1413747797,307281978,2120228870,3499547505,1022334733,3222343870,859866180,957858860,53774028,3762690258,1022334732,3075268862,95870047,1004913484,3224944527,890189344,3681404409,3193713664,3222468851,400624444,3573706167,3821992304,286495563,3560781096,1840715748,4184919813,223601614,1904107792,809502427,53760,8289,322,742458387,16,47,1342213572,340001361,1268033864,1901991049,1766073492,366563860,248070380,2496217748,3256203601,1661796364,2396927748,4601645,2189959298,134289601,2381193346,136347665,18407390,154308591,3187958534,405005309,545264012,811641352,4125270086,73628201,3917613088,2181056055,1669282848,2548769284,4031133674,2063266002,1579811939,1178055327,136348160,704930687,800235358,294387916,3792183424,1627392223,4033284211,1714954700,105940784,2321677,3545043059,1292923736,2352239827,3157572625,8158,525859,2312134786,2114983938,102958800,1619132424,407014864,115375888,525859,2446352514,2685409410,102958832,1619132423,419600784,1099483652,404783106,4260408856,2179737729,9462327,3322284064,671186987,2082226828,591395,3227541634,42211394,402780201,2365580,293700104,171991563,1627906213,9462320,2248542240,692161580,2283602584,37849281,404234368,2852536499,815794800,151397126,1616937472,2887336656,30943746,605588505,2172782592,3227913041,168864010,2422354021,101195776,2174496134,683845674,1099481496,404783106,109098776,2030743723,102958704,1619132425,440590432,2418737840,411834882,2181562396,1879778881,102978800,1619132423,474140048,3246970172,404783107,125876532,3676610626,2964261622,1114168070,136743936,549611713,3272615564,109069424,1356675010,1131725132,231934257,1356346565,3249664006,3278102540,2261237785,227512372,455024746,910049494,1820066228,3640132464,435160816,268458033,491225860,818626814,205964077,3238264844,1359434272,3839896584,522650211,2365143067,134224920,247824770,3775287466,1088048,809634211,906506394,1820082560,3640165120,435226112,268458033,516391684,2182111574,205916225,3238264844,1460122144,3825773576,522224995,2365130283,134229016,263438722,3443060912,102958112,1619132423,746842416,1647344900,136314992,3762198022,3271040194,2348827240,1757480998,3772260546,3249664262,2204361229,3295134747,272630112,3365019148,101204357,808523809,2198081536,561521800,2408587952,2893840917,1647567896,136315056,4165619462,2205009730,471370768,3246524416,283120260,3264578220,1288160281,1675758817,4043731111,94910513,3625720057,235699330,3057533294,632418404,422416259,369903228,3770745856,410290593,2182111364,197393,1753755713,721558914,559479042,1099614152,184951614,4032856576,205227236,1611010114,471371248,3246524416,284169092,3246965484,404783105,259078476,798502721,823783684,68157496,3861342595,293990433,1090519939,1115199536,409993759,268447793,667452164,2159026754,1647567901,136314976,2421690630,633430084,4180546335,3351867608,3792970110,521208163,2287011595,2084898191,558242924,4044887614,127424177,3361757433,513891527,562127844,2072345375,2248511376,369903228,3770745856,680725385,2232963589,205966157,3238264846,2483782240,2193745416,2216050240,611089540,1092155522,2466432968,1139380112,134946576,71997689,540586484,1616443657,967962642,2724456456,2985431664,1675633952,3352301732,373179272,1580331528,418906888,2080474159,12720012,4061148734,2408620465,2893841933,1044542485,2088927254,4161398828,3352301976,1715372300,1639052300,2204360716,2261237784,2295300144,545259969,3517929496,392243222,805374371,2734956698,3277882121,236658465,3362838777,2421655239,548408719,1096948511,45626942,91253884,182507768,1211177456,50597888,3270392868,904096822,75698566,1076904192,1815012290,1128806083,4731160,604177424,918744636,2184561516,295697,3258986561,3278647011,740514358,16,0,}},{"DXBC_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,1502474440,118668583,2701072547,1340382334,1,3052,5,52,824,948,1000,2896,1178944594,764,1,280,3,60,4294903041,1051904,724,625218323,60,24,40,40,36,12,0,180,3,0,0,0,0,1,0,0,0,222,2,5,4,4294967295,0,1,12,0,0,264,0,0,0,0,0,1,1,0,0,1651469415,1969187937,1734307682,1633841004,1635147628,1597464434,1954047348,1600483957,1886216563,1601332588,1818689584,1818321519,1868723551,1869375327,1600938338,1601331574,1702125367,1920300152,1702125413,1920300152,3170149,1651469415,1969187937,811560802,2880154368,264,1,304,288,0,0,264,0,284,2,688,0,4294967295,0,4294967295,0,1651469415,1969187937,1935634274,1668641396,3170164,1651469415,1985965153,811561569,1711288415,1952542572,3438644,196611,262148,0,0,0,0,0,0,379,1651469415,1985965153,828338785,1711288415,1952542572,3373107,196611,196611,0,0,0,0,0,0,439,1651469415,1985965153,845116001,1728065631,1633841004,1635147628,1597202290,1818689584,1818321519,1918989919,811545695,1869374976,3372129,196609,196609,0,0,0,0,0,0,529,1651469415,1985965153,895447649,1728065631,1633841004,1635147628,1597398898,2880110640,364,388,0,424,448,64,484,388,112,499,388,176,514,536,240,572,536,256,587,536,272,5,4325377,458752,604,0,0,0,0,344,1919117645,1718580079,1378361460,1279795241,1394625619,1701077352,1866670194,1818849389,824210021,3223088,1313297225,116,4,8,104,0,0,3,0,1799,104,1,0,3,1,1799,104,2,0,3,2,771,104,3,0,3,3,1799,1094930252,1313818964,2880154368,1313297231,44,1,8,32,0,0,3,0,15,1415534163,1162302017,2880110676,1480935507,1888,81,472,16779370,117440601,3182150,0,0,0,18,0,100663386,3173958,0,0,0,0,117446744,3178054,0,0,0,21845,0,50335842,1052786,0,50335842,1052786,1,50335842,1052722,2,50335842,1052786,3,50331749,1057010,0,33554536,7,184549445,1048818,0,1052742,2,2129478,0,0,2121728,0,0,117440561,1048706,0,16385,1008981770,1048634,0,50331679,1048634,0,83886134,1048690,0,1053254,3,16777237,167772160,1048690,1,1049158,0,16386,3173242634,3173242634,3173242634,0,251658290,1048690,1,1049158,1,16386,1056964608,1056964608,1056964608,0,16386,1025758986,1025758986,1025758986,0,117440528,1048706,0,1053254,1,1053254,1,83886148,1048706,0,1048634,0,117440568,1048690,2,1052662,0,1053254,1,167772160,1048690,3,2148536902,65,0,3179078,0,0,15,117440528,1048706,0,1049158,3,1049158,3,83886148,1048706,0,1048634,0,117440568,1048690,4,1052662,0,1049158,3,117440528,1048706,1,1049158,2,1049158,4,117440564,1048706,1,1048634,1,16385,0,167772160,1048690,5,2148536902,65,0,3179078,0,0,17,117440528,1048706,2,1049158,5,1049158,5,83886148,1048706,2,1048634,2,117440568,1048690,5,1052662,2,1049158,5,117440528,1048706,2,1049158,2,1049158,5,117440564,1048706,2,1048634,2,16385,0,184549376,1048690,6,2148532806,65,1,16386,1065353216,1065353216,1065353216,0,150994994,1048690,3,1049158,3,1052662,0,1049158,5,117440528,1048706,0,1049158,3,1049158,3,83886148,1048706,0,1048634,0,117440568,1048690,3,1052662,0,1049158,3,117448720,1048706,0,1049158,3,1049158,4,134217728,1048706,0,2148532282,65,0,16385,1065353216,117440568,1048706,3,1048634,0,1048634,0,117440568,1048706,3,1048634,3,1048634,3,117440568,1048706,0,1048634,0,1048634,3,150994994,1048690,1,1049158,6,1052662,0,1049158,1,184549376,1048690,4,2148532806,65,1,16386,1065353216,1065353216,1065353216,0,117440568,1048690,4,1049158,0,1049158,4,117440528,1048706,0,1049158,2,1049158,3,117440564,1048706,0,1048634,0,16385,0,117440568,1048706,0,1048634,0,1048634,0,150994994,1048706,0,1048634,0,16385,3211788288,16385,1065353216,117440568,1048706,0,1048634,0,1048634,0,117440568,1048706,0,1048634,0,16385,1078530012,117440526,1048706,0,16385,1031798784,1048634,0,150994994,1048594,2,1048634,2,16385,1060634624,16385,1049624576,117440526,1048594,2,1048634,2,1048586,2,150994994,1048610,2,1048634,1,16385,1060634624,16385,1049624576,117440526,1048610,2,1048634,1,1048602,2,117440568,1048594,2,1048602,2,1048586,2,117440568,1048706,0,1048634,0,1048586,2,117440568,1048690,1,1049158,1,1052662,0,117440568,1048706,0,1048634,1,1048634,2,150994994,1048706,0,1048634,0,16385,1082130432,16385,953267991,117440526,1048690,1,1049158,1,1052662,0,201326642,1048690,1,1049158,4,16386,1050868098,1050868098,1050868098,0,1049158,1,150995000,1048690,1,1049158,1,3179078,0,0,16,117440568,1048690,1,1052662,2,1049158,1,201326642,1056882,0,1049158,0,16386,1022739087,1022739087,1022739087,0,1049158,1,83886134,1056898,0,16385,1065353216,16777278,1413567571,148,58,7,0,5,52,0,0,1,1,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,}},{"Reflection_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", ShaderCodeModule::ShaderResources{0,"",{{"entryPointParam_main.var_32",{0,0,0,"entryPointParam_main.var_32","float",4,16,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(2)}},{"input.var_0.fragTexCoord",{0,0,2,"input.var_0.fragTexCoord","float",2,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"GlobalParams_std140",{0,0,0,"GlobalParams_std140","uniform",1,8,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(3)}},{"global_ubo_struct_std140",{3,0,0,"global_ubo_struct_std140","uniform",8,296,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(3)}},{"combinedTextureSamplerHandles",{4,0,0,"combinedTextureSamplerHandles","sampler2D",0,0,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(4)}},{"input.var_0.fragPos",{0,0,0,"input.var_0.fragPos","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragNormal",{0,0,1,"input.var_0.fragNormal","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},{"input.var_0.fragColor",{0,0,3,"input.var_0.fragColor","float",3,12,0,static_cast<EmbeddedShader::ShaderCodeModule::ShaderResources::BindType>(1)}},}}},{"SpirV_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{119734787,66816,2621440,324,0,131089,5302,131089,1,393227,89,1280527431,1685353262,808793134,0,196622,0,1,851983,4,2,1852399981,0,315,18,20,24,26,31,48,61,196624,2,7,196611,11,1,262149,12,1601331574,49,262149,12,1601331574,49,458757,18,1970302569,1635135092,774922098,1734439526,7565136,524293,20,1970302569,1635135092,774922098,1734439526,1836216142,27745,589829,24,1970302569,1635135092,774922098,1734439526,1131963732,1685221231,0,524293,26,1970302569,1635135092,774922098,1734439526,1869377347,114,458757,27,1651469383,1632660577,1936548210,1685353311,3159089,393222,27,0,1651469415,1969187937,28514,393221,31,1651469415,1632660577,1936548210,0,786437,40,1952533855,1400400242,1634889588,1717527911,1952542572,1597274164,1298952003,1919904353,828666995,12340,327686,40,0,1635017060,0,786437,43,1952533855,1400400242,1634889588,1717527911,1952542572,1597208627,1298952003,1919904353,828666995,12340,327686,43,0,1635017060,0,524293,46,1919379297,1952540517,2037669733,811558256,1685353311,3159089,327686,46,0,1954047348,6648437,589829,39,1651469415,1969187937,1935634274,1668641396,1953718132,808726884,0,458758,39,0,1651469415,1985965153,811561569,0,458758,39,1,1651469415,1985965153,828338785,0,458758,39,2,1651469415,1985965153,845116001,0,458758,39,3,1651469415,1985965153,861893217,0,458758,39,4,1651469415,1985965153,878670433,0,458758,39,5,1651469415,1985965153,895447649,0,458758,39,6,1651469415,1985965153,912224865,0,458758,39,7,1651469415,1985965153,929002081,0,393221,48,1717990754,1632137829,1701602414,115,655365,61,1651339107,1684369001,1954047316,1399157365,1819307361,1632137829,1701602414,115,262149,65,1886216563,6579564,262149,82,1886216563,6579564,262149,172,1601331574,12849,262149,218,1601331574,14130,589829,315,1920233061,1768902777,1632662638,1601003890,1852399981,1918989870,3289951,262149,2,1852399981,0,262215,18,30,0,262215,20,30,1,262215,24,30,2,262215,26,30,3,196679,27,2,327752,27,0,35,0,262215,31,33,0,262215,31,34,0,262215,41,6,16,327752,40,0,35,0,262215,44,6,16,327752,43,0,35,0,327752,46,0,35,0,196679,39,2,327752,39,0,35,0,327752,39,1,35,64,327752,39,2,35,112,327752,39,3,35,176,327752,39,4,35,240,327752,39,5,35,256,327752,39,6,35,272,327752,39,7,35,288,262215,48,33,0,262215,48,34,3,262215,61,33,0,262215,61,34,4,262215,315,30,0,131091,1,196641,3,1,196630,6,32,262167,7,6,4,262167,10,6,3,262176,11,7,10,262176,17,1,10,262167,21,6,2,262176,23,1,21,262165,28,32,0,262167,29,28,2,196638,27,29,262176,30,2,27,262165,32,32,1,262187,32,33,0,262176,34,2,29,262187,32,42,4,262172,41,7,42,196638,40,41,262187,32,45,3,262172,44,10,45,196638,43,44,196638,46,29,655390,39,40,43,40,40,10,10,10,46,196637,38,39,262176,47,2,38,262176,49,2,39,262187,32,51,7,262176,52,2,46,589849,58,6,1,2,0,0,1,0,196635,59,58,196637,57,59,262176,60,0,57,262176,62,0,59,131092,68,262187,6,70,1008981770,262187,6,91,1025758986,393260,10,90,91,91,91,262187,6,93,1056964608,393260,10,92,93,93,93,262176,97,2,10,262187,32,104,6,262187,6,113,0,262187,6,132,3211788288,262187,6,134,1065353216,262187,6,136,1078530012,393260,10,190,134,134,134,262187,6,216,1084227584,262187,6,225,1031798784,262187,6,227,1060634624,262187,6,229,1049624576,262187,6,273,1082130432,262187,6,284,953267991,262187,32,290,5,262187,6,308,1022739087,393260,10,307,308,308,308,262176,314,3,7,262203,17,18,1,262203,17,20,1,262203,23,24,1,262203,17,26,1,262203,30,31,2,262203,47,48,2,262203,60,61,0,262203,314,315,3,262187,6,322,1050868098,393260,10,323,322,322,322,327734,1,2,0,3,131320,4,262203,11,12,7,262205,10,16,18,262205,10,19,20,262205,21,22,24,262205,10,25,26,327746,34,35,31,33,262205,29,36,35,327761,28,37,36,0,327745,49,50,48,37,327746,52,53,50,51,327746,34,54,53,33,262205,29,55,54,327761,28,56,55,0,327745,62,63,61,56,262205,59,64,63,393303,7,65,64,22,0,327761,6,67,65,3,327866,68,69,67,70,196855,15,0,262394,69,14,13,131320,13,196670,12,25,131321,15,131320,14,327761,28,74,36,0,327745,49,75,48,74,327746,52,76,75,51,327746,34,77,76,33,262205,29,78,77,327761,28,79,78,0,327745,62,80,61,79,262205,59,81,80,393303,7,82,81,22,0,524367,10,84,82,82,0,1,2,196670,12,84,131321,15,131320,15,262205,10,87,12,524300,10,88,89,46,90,87,92,393228,10,94,89,69,19,327761,28,95,36,0,327745,49,96,48,95,327746,97,98,96,42,262205,10,99,98,327811,10,100,99,16,393228,10,101,89,69,100,327761,28,102,36,0,327745,49,103,48,102,327746,97,105,103,104,262205,10,106,105,327811,10,107,106,16,393228,10,108,89,69,107,327809,10,109,101,108,393228,10,110,89,69,109,327828,6,111,94,110,458764,6,112,89,40,111,113,327761,28,114,36,0,327745,49,115,48,114,327746,97,116,115,42,262205,10,117,116,327811,10,118,117,16,393228,10,119,89,69,118,327761,28,120,36,0,327745,49,121,48,120,327746,97,122,121,104,262205,10,123,122,327811,10,124,123,16,393228,10,125,89,69,124,327809,10,126,119,125,393228,10,127,89,69,126,327828,6,128,94,127,458764,6,129,89,40,128,113,327813,6,130,112,129,327813,6,131,130,132,327809,6,133,131,134,327813,6,135,136,133,327761,28,137,36,0,327745,49,138,48,137,327746,97,139,138,42,262205,10,140,139,327811,10,141,140,16,393228,10,142,89,69,141,327761,28,143,36,0,327745,49,144,48,143,327746,97,145,144,104,262205,10,146,145,327811,10,147,146,16,393228,10,148,89,69,147,327809,10,149,142,148,393228,10,150,89,69,149,327828,6,151,94,150,458764,6,152,89,40,151,113,327761,28,153,36,0,327745,49,154,48,153,327746,97,155,154,42,262205,10,156,155,327811,10,157,156,16,393228,10,158,89,69,157,327761,28,159,36,0,327745,49,160,48,159,327746,97,161,160,104,262205,10,162,161,327811,10,163,162,16,393228,10,164,89,69,163,327809,10,165,158,164,393228,10,166,89,69,165,327828,6,167,94,166,458764,6,168,89,40,167,113,327813,6,169,152,168,327813,6,170,169,132,327809,6,171,170,134,327813,6,172,135,171,327761,28,173,36,0,327745,49,174,48,173,327746,97,175,174,42,262205,10,176,175,327811,10,177,176,16,393228,10,178,89,69,177,327828,6,179,94,178,458764,6,180,89,40,179,113,327761,28,181,36,0,327745,49,182,48,181,327746,97,183,182,104,262205,10,184,183,327811,10,185,184,16,393228,10,186,89,69,185,327828,6,187,94,186,458764,6,188,89,40,187,113,327811,10,189,190,88,327761,28,191,36,0,327745,49,192,48,191,327746,97,193,192,42,262205,10,194,193,327811,10,195,194,16,393228,10,196,89,69,195,327761,28,197,36,0,327745,49,198,48,197,327746,97,199,198,104,262205,10,200,199,327811,10,201,200,16,393228,10,202,89,69,201,327809,10,203,196,202,393228,10,204,89,69,203,327761,28,205,36,0,327745,49,206,48,205,327746,97,207,206,42,262205,10,208,207,327811,10,209,208,16,393228,10,210,89,69,209,327828,6,211,204,210,524300,6,212,89,43,211,113,134,327811,6,213,134,212,524300,6,214,89,43,213,113,134,458764,6,215,89,26,214,216,327822,10,217,189,215,327809,10,218,88,217,327811,10,219,190,218,327813,10,221,219,87,327813,10,223,221,323,327816,6,224,225,172,327813,6,226,188,227,327809,6,228,226,229,327816,6,230,188,228,327813,6,231,180,227,327809,6,232,231,229,327816,6,233,180,232,327813,6,234,230,233,327813,6,235,224,234,327761,28,236,36,0,327745,49,237,48,236,327746,97,238,237,42,262205,10,239,238,327811,10,240,239,16,393228,10,241,89,69,240,327761,28,242,36,0,327745,49,243,48,242,327746,97,244,243,104,262205,10,245,244,327811,10,246,245,16,393228,10,247,89,69,246,327809,10,248,241,247,393228,10,249,89,69,248,327761,28,250,36,0,327745,49,251,48,250,327746,97,252,251,42,262205,10,253,252,327811,10,254,253,16,393228,10,255,89,69,254,327828,6,256,249,255,524300,6,257,89,43,256,113,134,327811,6,258,134,257,524300,6,259,89,43,258,113,134,458764,6,260,89,26,259,216,327822,10,261,189,260,327809,10,262,88,261,327822,10,263,262,235,327761,28,264,36,0,327745,49,265,48,264,327746,97,266,265,42,262205,10,267,266,327811,10,268,267,16,393228,10,269,89,69,268,327828,6,270,94,269,458764,6,271,89,40,270,113,327813,6,272,273,271,327761,28,274,36,0,327745,49,275,48,274,327746,97,276,275,104,262205,10,277,276,327811,10,278,277,16,393228,10,279,89,69,278,327828,6,280,94,279,458764,6,281,89,40,280,113,327813,6,282,272,281,327809,6,283,282,284,393296,10,285,283,283,283,327816,10,286,263,285,327809,10,287,223,286,327761,28,288,36,0,327745,49,289,48,288,327746,97,291,289,290,262205,10,292,291,327813,10,293,287,292,327761,28,294,36,0,327745,49,295,48,294,327746,97,296,295,104,262205,10,297,296,327811,10,298,297,16,393228,10,299,89,69,298,327828,6,300,94,299,458764,6,301,89,40,300,113,327822,10,302,293,301,327813,10,306,307,87,327809,10,309,306,302,327760,7,310,309,134,196670,315,310,65789,65592,}},{"GLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(#version 450
#extension GL_EXT_nonuniform_qualifier : require
layout(row_major) uniform;
layout(row_major) buffer;

#line 561 0
struct _MatrixStorage_float4x4_ColMajorstd140_0
{
    vec4  data_0[4];
};


#line 12399
struct _MatrixStorage_float3x3_ColMajorstd140_0
{
    vec3  data_1[3];
};


#line 22879
struct aggregate_type_0_std140_0
{
    uvec2 texture_0;
};


#line 22879
struct global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
    aggregate_type_0_std140_0 global_var_7_0;
};


#line 22879
struct GlobalParams_std140_0
{
    uvec2 global_ubo_0;
};


#line 22879
layout(binding = 0)
layout(std140) uniform block_GlobalParams_std140_0
{
    uvec2 global_ubo_0;
}globalParams_0;

#line 22879
layout(binding = 0, set = 3)
layout(std140) uniform block_global_ubo_struct_std140_0
{
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_0_0;
    _MatrixStorage_float3x3_ColMajorstd140_0 global_var_1_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_2_0;
    _MatrixStorage_float4x4_ColMajorstd140_0 global_var_3_0;
    vec3 global_var_4_0;
    vec3 global_var_5_0;
    vec3 global_var_6_0;
    aggregate_type_0_std140_0 global_var_7_0;
}bufferHandles_0[];

#line 22879
layout(binding = 0, set = 4)
uniform sampler2D  combinedTextureSamplerHandles_0[];


#line 12442
layout(location = 0)
out vec4 entryPointParam_main_var_32_0;


#line 12442
layout(location = 0)
in vec3 input_var_0_fragPos_0;


#line 12442
layout(location = 1)
in vec3 input_var_0_fragNormal_0;


#line 12442
layout(location = 2)
in vec2 input_var_0_fragTexCoord_0;


#line 12442
layout(location = 3)
in vec3 input_var_0_fragColor_0;


#line 71 1
struct fragment_output_0
{
    vec4 var_32_0;
};


#line 75
void main()
{

#line 76
    fragment_output_0 output_0;

#line 76
    uvec2 _S1 = globalParams_0.global_ubo_0;

#line 76
    vec3 var_1_0;

    if(((texture((combinedTextureSamplerHandles_0[bufferHandles_0[globalParams_0.global_ubo_0.x].global_var_7_0.texture_0.x]), (input_var_0_fragTexCoord_0))).w) > 0.00999999977648258)
    {

#line 78
        var_1_0 = (texture((combinedTextureSamplerHandles_0[bufferHandles_0[_S1.x].global_var_7_0.texture_0.x]), (input_var_0_fragTexCoord_0))).xyz;

#line 78
    }
    else
    {

#line 78
        var_1_0 = input_var_0_fragColor_0;

#line 78
    }

#line 87
    vec3 var_4_0 = mix(vec3(0.03999999910593033, 0.03999999910593033, 0.03999999910593033), var_1_0, vec3(0.5));

#line 95
    vec3 _S2 = normalize(input_var_0_fragNormal_0);
    float var_13_0 = max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0);

#line 101
    float var_18_0 = max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), 0.0);

#line 107
    const vec3 var_24_0 = vec3(1.0, 1.0, 1.0);


    vec3 _S3 = var_24_0 - var_4_0;

#line 116
    output_0.var_32_0 = vec4(vec3(0.02999999932944775, 0.02999999932944775, 0.02999999932944775) * var_1_0 + ((var_24_0 - (var_4_0 + _S3 * pow(clamp(1.0 - clamp(dot(normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0, 1.0), 0.0, 1.0), 5.0))) * var_1_0 / 3.14159297943115234 + 0.0625 / (3.14159297943115234 * (max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * -0.9375 + 1.0) * (max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * max(dot(_S2, normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0))), 0.0) * -0.9375 + 1.0)) * (var_18_0 / (var_18_0 * 0.71875 + 0.28125) * (var_13_0 / (var_13_0 * 0.71875 + 0.28125))) * (var_4_0 + _S3 * pow(clamp(1.0 - clamp(dot(normalize(normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0) + normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0, 1.0), 0.0, 1.0), 5.0)) / (4.0 * max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_4_0 - input_var_0_fragPos_0)), 0.0) * max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), 0.0) + 0.00009999999747379)) * bufferHandles_0[_S1.x].global_var_5_0 * max(dot(_S2, normalize(bufferHandles_0[_S1.x].global_var_6_0 - input_var_0_fragPos_0)), 0.0), 1.0);

#line 116
    entryPointParam_main_var_32_0 = output_0.var_32_0;

#line 116
    return;
}

)"},{"HLSL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"()"},{"Slang_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", R"(struct aggregate_type_0 {
	Sampler2D<float4>.Handle texture;
}
struct aggregate_type_1 {
	float3 inPosition;
	float3 inNormal;
	float2 inTexCoord;
	float3 inColor;
}
struct aggregate_type_2 {
	float3 fragPos;
	float3 fragNormal;
	float2 fragTexCoord;
	float3 fragColor;
}
struct global_ubo_struct {
	float4x4 global_var_0;
	float3x3 global_var_1;
	float4x4 global_var_2;
	float4x4 global_var_3;
	float3 global_var_4;
	float3 global_var_5;
	float3 global_var_6;
	aggregate_type_0 global_var_7;
}
uniform ConstantBuffer<global_ubo_struct>.Handle global_ubo;
[vk::binding(0, 1)]
__DynamicResource<__DynamicResourceKind.Sampler> samplerHandles[];

[vk::binding(0, 2)]
__DynamicResource<__DynamicResourceKind.General> textureHandles[];

[vk::binding(0, 3)]
__DynamicResource<__DynamicResourceKind.General> bufferHandles[];

[vk::binding(0, 4)]
__DynamicResource<__DynamicResourceKind.General> combinedTextureSamplerHandles[];

[vk::binding(0, 5)]
__DynamicResource<__DynamicResourceKind.General> accelerationStructureHandles[];

[vk::binding(0, 6)]
__DynamicResource<__DynamicResourceKind.General> texelBufferHandles[];

export T getDescriptorFromHandle<T>(DescriptorHandle<T> handle) where T : IOpaqueDescriptor
{
	__target_switch
	{
		case spirv:
		case glsl:
		if (T.kind == DescriptorKind.Sampler)
			return samplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Texture)
			return textureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.Buffer)
			return bufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.CombinedTextureSampler)
			return combinedTextureSamplerHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.AccelerationStructure)
			return accelerationStructureHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else if (T.kind == DescriptorKind.TexelBuffer)
			return texelBufferHandles[((uint2)handle).x].asOpaqueDescriptor<T>();
		else
			return defaultGetDescriptorFromHandle(handle);
		default:
		return defaultGetDescriptorFromHandle(handle);
	}
}struct fragment_input {
	aggregate_type_2 var_0 : LOCATION0;
}
struct fragment_output {
	float4 var_32 : SV_TARGET0;
}
[shader("fragment")]
fragment_output main(fragment_input input) {
	fragment_output output;
	float3 var_1 = float3(0.000000, 0.000000, 0.000000);
	if (((*global_ubo).global_var_7.texture.Sample(input.var_0.fragTexCoord).w > 0.010000)) {
		var_1 = (*global_ubo).global_var_7.texture.Sample(input.var_0.fragTexCoord).xyz;
	}
	else {
		var_1 = input.var_0.fragColor;
	}
	float var_2 = 0.500000;
	float var_3 = 0.500000;
	float3 var_4 = float3(0.040000, 0.040000, 0.040000);
	var_4 = lerp(var_4,var_1,var_3);
	float3 var_5 = float3(0.000000, 0.000000, 0.000000);
	float var_6 = 1.000000;
	float var_7 = var_2;
	float var_8 = ((var_7 * var_7) * (var_7 * var_7));
	float var_9 = 1.000000;
	float var_10 = 1.000000;
	float var_11 = 3.141593;
	float var_12 = ((var_11 * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10)) * (((max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000) * max(dot(normalize(input.var_0.fragNormal),normalize((normalize(((*global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))))),0.000000)) * (((var_7 * var_7) * (var_7 * var_7)) - var_9)) + var_10));
	float var_13 = max(dot(normalize(input.var_0.fragNormal),normalize(((*global_ubo).global_var_4 - input.var_0.fragPos))),0.000000);
	float var_14 = 1.000000;
	float var_15 = 8.000000;
	float var_16 = var_13;
	float var_17 = 1.000000;
	float var_18 = max(dot(normalize(input.var_0.fragNormal),normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))),0.000000);
	float var_19 = 1.000000;
	float var_20 = 8.000000;
	float var_21 = var_18;
	float var_22 = 1.000000;
	float var_23 = 1.000000;
	float3 var_24 = float3(1.000000, 1.000000, 1.000000);
	float var_25 = 4.000000;
	float var_26 = 0.000100;
	float3 var_27 = (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize(((*global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_ubo).global_var_6 - input.var_0.fragPos)))),normalize(((*global_ubo).global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)));
	float3 var_28 = float3(1.000000, 1.000000, 1.000000);
	float var_29 = 1.000000;
	float var_30 = 3.141593;
	var_5 = (var_5 + ((((((var_28 - var_27) * var_1) / var_30) + ((((var_8 / var_12) * ((var_21 / ((var_18 * (var_22 - (((var_2 + var_19) * (var_2 + var_19)) / var_20))) + (((var_2 + var_19) * (var_2 + var_19)) / var_20))) * (var_16 / ((var_13 * (var_17 - (((var_2 + var_14) * (var_2 + var_14)) / var_15))) + (((var_2 + var_14) * (var_2 + var_14)) / var_15))))) * (var_4 + ((var_24 - var_4) * pow(clamp((var_23 - clamp(dot(normalize((normalize(((*global_ubo).global_var_4 - input.var_0.fragPos)) + normalize(((*global_ubo).global_var_6 - input.var_0.fragPos)))),normalize(((*global_ubo).global_var_4 - input.var_0.fragPos))),0.000000,1.000000)),0.000000,1.000000),5.000000)))) / (((var_25 * max(dot(normalize(input.var_0.fragNormal),normalize(((*global_ubo).global_var_4 - input.var_0.fragPos))),0.000000)) * max(dot(normalize(input.var_0.fragNormal),normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))),0.000000)) + var_26))) * ((*global_ubo).global_var_5 * var_6)) * max(dot(normalize(input.var_0.fragNormal),normalize(((*global_ubo).global_var_6 - input.var_0.fragPos))),0.000000)));
	float3 var_31 = float3(0.030000, 0.030000, 0.030000);
	output.var_32 = float4(((var_31 * var_1) + var_5),1.000000);
	return output;
}
)"},{"DXIL_Bindless_D__Files_Code_Projects_Helicon_Examples_main_cpp", std::vector<uint32_t>{1128421444,3509930934,3025093365,504380405,1129325782,1,5856,7,60,76,232,292,604,2644,2672,810108499,8,100663296,0,826757961,148,4,8,0,136,0,0,3,0,1799,0,0,136,1,0,3,1,1799,0,0,136,2,0,3,2,771,0,0,136,3,0,3,3,1799,0,1094930252,1313818964,0,826757967,52,1,8,0,40,0,64,3,0,15,0,1415534163,1701278305,116,810963792,304,52,0,0,0,0,0,4294967295,0,67109124,1,0,0,0,37,1,24,2,0,0,0,13,0,44,1129270272,1330205761,1330380878,1230258499,1275088463,1413563215,5132105,1094930252,1313818964,1767992576,110,4,0,1,2,3,16,1,0,4390913,515,10,1,4391169,515,19,2,4325889,515,28,3,4391681,515,0,0,272891905,3,7,7,7,0,7,7,7,0,7,7,0,0,1,2,4,0,1413567571,2032,102,508,1279875140,262,16,2008,3737142082,3105,499,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,72,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146910224,167774528,149291110,9330880,272680489,1368408388,2283831308,2323914850,2680915579,4237330352,2240178192,1194492224,560108560,3869345288,670228904,2669945324,627222747,1840824102,818089028,371319316,2258870402,2276499403,2741927056,2090374538,1091679972,139527184,2584238217,2133727854,4064419522,2304393815,460206025,204522261,1646944580,409044569,3357049352,205572138,51130563,2283300193,205698177,1997549764,335114459,3214020854,1162056210,3460731138,1108558915,2283817032,3804507202,1892710353,284562425,3524444050,570635398,1244168712,3240169649,806369424,1460674700,155472713,1311641491,271133696,3556019201,835659816,2516592406,1174439956,2551474682,822371956,655431,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,2148131888,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,64,0,136200960,98312,0,1015414784,50335763,0,201326592,2108537,6,0,1080095256,1024,0,3521392640,524416,0,3361734656,268501443,0,3221225472,33810320,32,0,412033408,1048832,0,373293056,8,21,412622386,2420904217,1193675148,574817478,1176019018,211945984,1242866122,2747926691,1502217164,2164927648,18387594,674398760,3038790288,285278464,27060273,2147906592,2275586514,939757112,238551950,2181302272,6604,6265,152,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,876642918,2558624795,114167840,3223859393,270036429,2686490754,969939073,185826147,2466939747,4221266699,270571906,1355024079,404275990,1825588064,29360160,1080428582,3637404678,3636643038,3737447102,136732862,541144068,553781666,1770524749,458244226,2358387216,229419657,273511170,906764494,421708816,3678798875,2517637200,17044333,409731288,282840844,2709920636,1107919619,2260831258,3024620608,297379205,169507425,1920617122,3658752154,920166660,2701444612,1158162144,2794471863,106007309,1745252454,444794512,112224024,3277947419,427922482,2753249692,3271991489,2260839449,1210112704,717588178,2201498371,562251831,2150870029,3028356483,3234500961,239128076,55599314,1624640745,1845936387,3228763920,2347420260,2901298218,1350725260,3800306552,3574603931,2210545926,122784525,1745313894,499320432,126904088,3627876891,516018224,889459456,2181923584,2317027281,3774352526,1646396401,1668178290,879977832,3269384396,136767208,3441608068,1852739181,878461058,3201225446,136759512,778257924,2389437677,1681949294,4039829572,3839810750,2687514330,679642160,2485715596,43788674,1354933290,2932706693,2894931405,1248759244,3273741328,2469114227,1937460123,1292898971,3965513928,3404519618,1174709988,2537304605,2989536313,933673266,699806386,210129409,1823360463,1850650094,1248750764,3273807072,2211160435,1936853803,2735448955,2608036683,1617699483,3473704784,3970772677,2322368814,1823378478,1963335754,3395088584,4075088092,3704807072,78046952,210096254,2917950927,1286507982,2420797038,10,6265,81,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,2172858608,3693019592,2716081216,492945948,3827056860,1,8305,51,2534228134,3493739759,1275383348,3274967108,872568898,4176723548,285266433,1840715750,4184922884,17556430,1413747797,307281978,2120228870,2958482289,1022334733,1162875070,61162561,6366476,3072583170,1893534573,199479033,1145831697,1120089096,1824756092,2367697736,1893335905,199479033,1145831697,1120089096,2227409276,2178478084,4089338931,3711140856,383480190,4019653936,14876220,3560757379,1840715748,4184920070,4973518,1602497779,1409922780,2403067331,1145982255,1358222496,3067895699,3854777377,894406459,3321463872,3238009709,215040,0,1213415752,20,0,3713961166,3185792569,1876502902,3653836645,1279875140,3176,102,794,1279875140,262,16,3152,3737142082,3105,785,2130443,2,19,2435023111,1225050177,959582214,209977746,419956005,1653277726,38082688,1108054594,338825412,1259866168,2288136714,538218568,2777171523,1110579456,2416855268,1355031313,2357285185,2330297313,105263364,6225,8,4292906011,134217727,229114432,4294963332,537133055,4286984301,536870911,11012352,6217,3,1113621011,101207072,0,8329,73,159916594,75850784,2225349395,3810726660,345022852,2358004754,1287947275,146911248,167774528,149291110,9330880,272680489,1368408388,2283831308,2323914850,2680915579,4237330352,2240178192,1194492224,560108560,3869345288,670228904,2669945324,627222747,1840824102,818089028,371319316,2258870402,2276499403,2741927056,2090374538,1091679972,139527184,2584238217,2133727854,4064419522,2304393815,460206025,204522261,1646944580,409044569,3357049352,205572138,51130563,2283300193,205698177,1997549764,335114459,3214020854,1162056210,3460731138,1108558915,2283817032,3804507202,1892710353,284562425,3524444050,570635398,1244168712,3240169649,806369424,1460674700,155472713,1311641491,271133696,3556019201,835659816,2516592406,1174439956,2551474682,822371956,1393164359,0,3228701715,2271245447,2038917174,3228697448,1353584007,248540430,1829654650,813305600,127955463,1829183603,2691763856,119567111,2014220397,3497527200,118548742,1896325238,2423064416,119567118,1913073786,1625884368,127955975,1829191798,1618021984,118520327,3859206262,2691827504,119567111,1980653677,1618609984,114324487,2047312110,2692089616,119567111,1946640506,648240,0,0,1674076160,1048832,0,2428502016,1073873159,0,2147483648,67325729,64,0,136200960,98312,0,1015414784,50335763,0,201326592,2108537,6,0,1080095256,1024,0,3521392640,524416,0,3361734656,268501443,0,3221225472,33810320,32,0,412033408,1048832,0,373293056,8,17,345513522,2420904217,1193675148,574817478,1243127882,547357794,2317131978,682114208,578818441,688030504,269177348,2198933520,2275586514,939757112,238551950,2181302272,6608,6265,96,2420900634,1142096454,3966700687,604786157,1170671046,3332769446,67520101,3322293317,650587174,1130704006,135285776,876642918,2558624795,114167840,3223859297,270036429,270571650,218170575,68354618,679533058,1126736651,2617797635,1006633997,220267712,876678584,301994049,1852399981,2258540612,2660411522,1158162076,2888319285,1093828877,1107930664,2282769793,1212187240,3683484699,1972709552,698407265,404862807,1698901046,1748393821,273536451,272853384,1837374214,1099215067,2422365541,1545099533,3626086499,1700473910,227566941,460682970,3356233480,1285033152,2236710233,3516243401,1820987469,325603458,551191044,1638951788,1254150225,3558534147,1624815936,453431363,57684870,111182432,2168522459,1153764739,118751677,3973634133,3369229530,2800278730,840253700,851121980,934590905,3506514359,3318680708,2932706350,1615490636,1942168020,587940761,2053870379,2606967587,3362070546,3403963632,3840597734,2800143046,840781572,3032160060,2988751794,3123755561,1413556658,2781809799,776900044,3442338319,1248751245,1808,6265,81,478152755,1713168836,2285699348,3280222275,125846156,1929869433,3859575192,283971328,243332110,507644979,3458056642,811998369,1133001989,461603896,3359441868,59522371,2356726845,2064085108,1215891208,124809351,1979936890,544245624,298588551,244378638,1846489313,4041412400,240185358,499388467,3625722334,1640111393,2301650462,998489147,3023651792,2210151427,990086204,1981083852,1752893280,2271753991,923232370,2423293824,123760775,1980180598,2021000696,2273343367,1904674911,2557642520,2174253447,250670636,4111393006,820776640,2714264067,480371740,3827081676,1641815201,471976476,3390931396,2429945441,1137195331,960731193,3090760648,1133787331,990087224,3157246868,2197568643,990106683,3364668336,1887176481,2266001923,2063822963,1618544392,2278060167,2047322231,3829170584,1080954752,248571151,2172858608,3693019592,2716081216,492945948,3827056860,1,8305,51,2534228134,3493739759,1275383348,3274967108,872568898,4176723548,285266433,1840715750,4184922884,17556430,1413747797,307281978,2120228870,2958482289,1022334733,1162875070,61162561,6366476,3072583170,1893534573,199479033,1145831697,1120089096,1824756092,2367697736,1893335905,199479033,1145831697,1120089096,2227409276,2178478084,4089338931,3711140856,383480190,4019653936,14876220,3560757379,1840715748,4184920070,4973518,1602497779,1409922780,2403067331,1145982255,1358222496,3067895699,3854777377,894406459,3321463872,3238009709,215040,8289,343,742589459,16,48,146855108,1076172032,1251246404,3779630265,1112098581,323045652,557902996,248596117,348734100,1074577644,3646657569,1661800853,2396927748,4601645,2189959298,134289601,2381193346,136347665,1177575594,2015396352,3154404223,405064255,4143452556,811634575,4125270086,73628201,3917613088,2181056055,1669282848,2936876804,541472687,2125037234,1579811939,1178055327,136348160,704930687,800235358,294387916,3792183424,415238367,3955444673,2268566013,483395264,3248757506,108315164,4033218675,4043782224,380732,525859,102785154,3238412451,2294397983,545259969,4037377048,1099482629,404783106,4259360536,3253217345,9462327,101058592,547388460,100692234,591395,3294650498,3263436802,406973480,2365580,562135560,167797003,1644679332,9462320,3322284064,675383340,2350711444,37849281,404234368,2835755188,1082067552,151397126,1616937472,2820211412,1104685506,605588505,2172782592,2959412065,167815178,2422354022,101195776,1100492230,679650346,1099481500,404783106,108050456,2030739626,102958720,1619132425,436397152,2351612588,411834946,2181562396,1728799937,1757589696,411828290,2181562400,1879810881,528611344,1841292,1203864072,1343254027,460323,3912261762,1996757698,1088048,809634211,536903778,801965576,170951124,1885483171,101195776,1103900255,538480000,1099040768,813108755,2351514264,134224920,196592002,593760373,2181041926,1132552288,616631336,3692577157,1104424386,69635096,2957275331,3409428998,1757480976,646709442,1114161424,135449633,293803267,1345323488,503388209,2199192320,1610735633,3351255747,2407544326,520121613,1044438555,2088878134,4177758316,4027003096,3759047089,3223143267,23118951,2953580608,830810232,405832464,2198352131,197393,3805294657,184685889,641614026,1820098964,2365129512,134224920,261357954,3282432169,2348827240,1757480998,2430083266,565309702,1130619405,3295134746,272630112,2290003980,101204357,808523809,50597888,560734125,2408587952,2893840917,1647567896,136314992,3561574406,3281263298,2348827240,1757480998,1356341442,2712793351,1130619406,3295134749,272630112,3902058508,101204357,808523809,50597888,566502701,2408587952,2893840917,3278103576,505093891,3237009656,23118951,2953580608,1099376792,404817416,268447793,640484100,581968340,2182451088,3826822268,11559475,2550532128,415475789,202916232,1885483074,101195776,1134841180,68553584,478196210,283534308,1107871684,2208568894,2182597756,3359660280,23118951,2953580608,906467487,3474264,823906179,68157496,3827813891,294060065,1090520451,2730672176,228645918,2829762776,230161,3235917889,1895964290,2210427184,3761821944,478968897,591274224,2181040902,2241429600,1951550526,105932294,460323,2512412802,3875814981,7365168,2617640992,2420412505,1091479054,235685500,2160133120,142478147,3770966484,202391552,2302194872,205921664,3238264844,2550881088,131607560,404262137,2172782592,288560854,3351822424,910050820,2024927792,1492682040,3871851584,1675760897,2870939969,2408076423,1820083717,1044511766,837949462,4178116698,3351797848,3827581290,522289507,2687502699,556234127,38931231,4094031422,156250417,314595577,137507312,566518760,4177791775,4032835160,3770703025,3246438755,1044514503,2985432118,3046084801,3351793473,2408592898,520183813,2566521395,2361905185,1748385409,2200023536,2081951119,920646,3389047044,133739661,139270334,553963904,68701464,3640200731,2261239920,260456003,3273597284,2408624775,3361309665,2420051143,545200527,1094726431,4028118590,2407580081,1182533133,67113484,2404974785,3742232767,3294727608,272630048,4176842764,2381373195,205918422,3238264850,3213842688,2967408112,549740685,202391553,200865168,3666735327,265016,0,}},
};